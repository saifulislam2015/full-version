{"version":3,"sources":["views/ui-elements/cards/analytics/Sales2.js","views/ui-elements/cards/analytics/Revenue.js","views/ui-elements/cards/analytics/Customers.js","views/ui-elements/cards/analytics/ProductOrders.js","views/ui-elements/cards/analytics/SessionByDevice.js","views/ui-elements/cards/analytics/index.js","@core/components/breadcrumbs/index.js","views/ui-elements/cards/analytics/Sales.js","views/ui-elements/cards/analytics/AvgSessions.js","views/ui-elements/cards/analytics/SupportTracker.js","views/ui-elements/cards/analytics/Earnings.js","views/ui-elements/cards/analytics/GoalOverview.js","views/ui-elements/cards/analytics/RevenueReport.js"],"names":["Sales2","props","options","chart","toolbar","show","zoom","enabled","type","dropShadow","top","left","blur","opacity","offsetX","stroke","curve","width","grid","borderColor","padding","bottom","legend","colors","fill","gradient","shade","inverseColors","gradientToColors","primary","shadeIntensity","opacityFrom","opacityTo","stops","markers","size","hover","xaxis","labels","offsetY","style","fontSize","fontFamily","axisTicks","categories","axisBorder","tickPlacement","yaxis","tickAmount","formatter","val","toFixed","tooltip","x","className","tag","series","name","data","height","Revenue","useState","setData","useEffect","axios","get","then","res","dashArray","Customers","dataLabels","warning","danger","color","end","last_days","map","item","listData","index","IconTag","Icon","icon","classnames","length","iconColor","text","result","ProductOrders","plotOptions","radialBar","hollow","track","strokeWidth","margin","value","fontWeight","total","label","lineCap","chart_info","finished","pending","rejected","SessionByDevice","comparedResult","usage","upDown","AnalyticsCards","context","useContext","ThemeColors","breadCrumbTitle","breadCrumbParent","breadCrumbActive","lg","sm","SupportTracker","main","RevenueReport","GoalOverview","success","Sales","info","md","Earnings","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","to","active","Link","background","foreColor","radar","polygons","strokeColors","connectorColors","AvgSessions","sparkline","right","states","filter","bar","columnWidth","distributed","borderRadius","order","xs","kFormatter","sessions","growth","goal","users","retention","duration","startAngle","endAngle","title","totalTicket","id","newTicket","openTicket","responseTime","pie","donut","parseInt","responsive","breakpoint","completed","inProgress","revenueOptions","stacked","lines","budgetOptions","outline","caret","years","price","budget"],"mappings":"kOAmHeA,EA5GA,SAAAC,GACb,IAAMC,EAAU,CACZC,MAAO,CACLC,QAAS,CAAEC,MAAM,GACjBC,KAAM,CAAEC,SAAS,GACjBC,KAAM,OACNC,WAAY,CACVF,SAAS,EACTG,IAAK,GACLC,KAAM,EACNC,KAAM,EACNC,QAAS,IAEXC,SAAU,IAEZC,OAAQ,CACNC,MAAO,SACPC,MAAO,GAETC,KAAM,CACJC,YAAa,UACbC,QAAS,CACPV,KAAM,GACNW,OAAQ,EACRV,KAAM,KAGVW,OAAQ,CACNjB,MAAM,GAERkB,OAAQ,CAAC,WACTC,KAAM,CACJhB,KAAM,WACNiB,SAAU,CACRC,MAAO,OACPC,eAAe,EACfC,iBAAkB,CAAC3B,EAAM4B,SACzBC,eAAgB,EAChBtB,KAAM,aACNuB,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,IAAK,IAAK,OAGzBC,QAAS,CACPC,KAAM,EACNC,MAAO,CACLD,KAAM,IAGVE,MAAO,CACLC,OAAQ,CACNC,QAAS,EACTC,MAAO,CACLjB,OAAQ,UACRkB,SAAU,WACVC,WAAY,eAGhBC,UAAW,CACTtC,MAAM,GAERuC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,OAC3FC,WAAY,CACVxC,MAAM,GAERyC,cAAe,MAEjBC,MAAO,CACLC,WAAY,EACZV,OAAQ,CACNE,MAAO,CACLjB,OAAQ,UACRkB,SAAU,WACVC,WAAY,cAEdO,UANM,SAMIC,GACR,OAAOA,EAAM,IAAN,WAAgBA,EAAM,KAAMC,QAAQ,GAApC,KAA4CD,KAIzDE,QAAS,CACPC,EAAG,CAAEhD,MAAM,KASjB,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAYiD,UAAU,oBAAtB,UACE,gCACE,cAAC,IAAD,CAAWA,UAAU,QAAQC,IAAI,KAAjC,mBAGA,cAAC,IAAD,CAAUD,UAAU,OAApB,yCAEF,cAAC,IAAD,CAAUnB,KAAM,GAAImB,UAAU,iCAEhC,cAAC,IAAD,CAAUA,UAAU,OAApB,SACE,cAAC,IAAD,CAAOpD,QAASA,EAASsD,OAlBpB,CACP,CACEC,KAAM,QACNC,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAerBlD,KAAK,OAAOmD,OAAQ,Y,wBCsBtDC,EAzHC,SAAA3D,GAEd,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WACRC,IAAMC,IAAI,gCAAgCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,WACjE,IAEH,IAAMxD,EAAU,CACZC,MAAO,CACLC,QAAS,CAAEC,MAAM,GACjBC,KAAM,CAAEC,SAAS,GACjBC,KAAM,OACNM,SAAU,IAEZC,OAAQ,CACNC,MAAO,SACPoD,UAAW,CAAC,EAAG,IACfnD,MAAO,CAAC,EAAG,IAEbK,OAAQ,CACNjB,MAAM,GAERkB,OAAQ,CAAC,UAAW,WACpBC,KAAM,CACJhB,KAAM,WACNiB,SAAU,CACRC,MAAO,OACPC,eAAe,EACfC,iBAAkB,CAAC3B,EAAM4B,QAAS,WAClCC,eAAgB,EAChBtB,KAAM,aACNuB,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,IAAK,IAAK,OAGzBC,QAAS,CACPC,KAAM,EACNC,MAAO,CACLD,KAAM,IAGVE,MAAO,CACLC,OAAQ,CACNE,MAAO,CACLjB,OAAQ,UACRkB,SAAU,SAGdE,UAAW,CACTtC,MAAM,GAERuC,WAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACvDC,WAAY,CACVxC,MAAM,GAERyC,cAAe,MAEjBC,MAAO,CACLC,WAAY,EACZV,OAAQ,CACNE,MAAO,CACLjB,OAAQ,UACRkB,SAAU,QAEZQ,UALM,SAKIC,GACR,OAAOA,EAAM,IAAN,WAAgBA,EAAM,KAAMC,QAAQ,GAApC,KAA4CD,KAIzDhC,KAAM,CACJC,YAAa,UACbC,QAAS,CACPV,KAAM,GACNW,QAAS,GACTV,KAAM,KAGVyC,QAAS,CACPC,EAAG,CAAEhD,MAAM,KAajB,OAAgB,OAATqD,EACL,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWH,IAAI,KAAf,qBACA,cAAC,IAAD,CAAUpB,KAAM,GAAImB,UAAU,iCAEhC,eAAC,IAAD,WACE,sBAAKA,UAAU,oCAAf,UACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAUA,UAAU,QAApB,wBACA,qBAAIA,UAAU,YAAd,UACE,qBAAKA,UAAU,8BAAf,eACA,sBAAMA,UAAU,eAAhB,0BAGJ,gCACE,cAAC,IAAD,CAAUA,UAAU,QAApB,wBACA,qBAAIA,UAAU,YAAd,UACE,qBAAKA,UAAU,8BAAf,eACA,mDAIN,cAAC,IAAD,CAAOpD,QAASA,EAASsD,OAjCpB,CACP,CACEC,KAAM,aACNC,KAAM,CAAC,KAAO,KAAO,MAAO,MAAO,MAAO,KAAO,MAAO,QAE1D,CACED,KAAM,aACNC,KAAM,CAAC,KAAO,KAAO,MAAO,MAAO,MAAO,MAAO,KAAO,QA0BflD,KAAK,OAAOmD,OAAQ,YAG/D,M,0CCjCSU,EA5EG,SAAApE,GAEhB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WACRC,IAAMC,IAAI,kCAAkCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,WACnE,IAEH,IAAMxD,EAAU,CACZC,MAAO,CACLC,QAAS,CACPC,MAAM,IAGViC,OAAQ,CAAC,MAAO,YAAa,aAC7BgC,WAAY,CACV/D,SAAS,GAEXe,OAAQ,CAAEjB,MAAM,GAChBU,OAAQ,CACNE,MAAO,GAETM,OAAQ,CAACtB,EAAM4B,QAAS5B,EAAMsE,QAAStE,EAAMuE,SA8BjD,OAAgB,OAATd,EACL,eAAC,IAAD,WACE,eAAC,IAAD,CAAYJ,UAAU,kBAAtB,UACE,cAAC,IAAD,CAAWC,IAAI,KAAf,uBACA,eAAC,KAAD,CAAsBD,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBmB,MAAM,GAAGnB,UAAU,sCAAnC,yBAGA,cAAC,IAAD,CAAcoB,KAAG,EAAjB,SACGhB,EAAKiB,UAAUC,KAAI,SAAAC,GAAI,OACtB,cAAC,IAAD,CAAcvB,UAAU,QAAxB,SACGuB,GADkCA,cAO7C,eAAC,IAAD,WACE,cAAC,IAAD,CAAO3E,QAASA,EAASsD,OA9CpB,CAAC,IAAK,IAAK,KA8CyBhD,KAAK,MAAMmD,OAAQ,MAC5D,qBAAKL,UAAU,QAAf,SA5CGI,EAAKoB,SAASF,KAAI,SAACC,EAAME,GAC9B,IAAMC,EAAUC,EAAKJ,EAAKK,MAE1B,OACE,sBAEE5B,UAAW6B,IAAW,iCAAkC,CACtD,OAAQJ,IAAUrB,EAAKoB,SAASM,OAAS,IAH7C,UAME,sBAAK9B,UAAU,4BAAf,UACE,cAAC0B,EAAD,CACE7C,KAAM,GACNmB,UAAW6B,IAAW,eACnBN,EAAKQ,UAAYR,EAAKQ,cAG3B,sBAAM/B,UAAU,gBAAhB,SAAiCuB,EAAKS,UAExC,+BAAOT,EAAKU,WAdPR,cA0CT,M,2BC4BSS,EAvGO,SAAAvF,GAEpB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WACRC,IAAMC,IAAI,uCAAuCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,WACxE,IAEH,IAAMxD,EAAU,CACZoC,OAAQ,CAAC,WAAY,UAAW,YAChCmD,YAAa,CACXC,UAAW,CACTvD,KAAM,IACNwD,OAAQ,CACNxD,KAAM,OAERyD,MAAO,CACLC,YAAa,OACbC,OAAQ,IAEVxB,WAAY,CACVyB,MAAO,CACLtD,SAAU,OACVlB,OAAQ,UACRyE,WAAY,MACZzD,QAAS,GAEX0D,MAAO,CACL5F,MAAM,EACN6F,MAAO,QACPzD,SAAU,WACVlB,OAAQ,UACRyE,WAAY,MAEZ/C,UAPK,WASH,OAAO,WAMjB1B,OAAQ,CAACtB,EAAM4B,QAAS5B,EAAMsE,QAAStE,EAAMuE,QAC7CzD,OAAQ,CACNoF,QAAS,SAEXhG,MAAO,CACLwD,OAAQ,IACRlD,WAAY,CACVF,SAAS,EACTK,KAAM,EACND,KAAM,EACND,IAAK,EACLG,QAAS,MAMjB,OAAgB,OAAT6C,EACL,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWH,IAAI,KAAf,4BACA,eAAC,KAAD,CAAsBD,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBmB,MAAM,GAAGnB,UAAU,sCAAnC,yBAGA,cAAC,IAAD,CAAcoB,KAAG,EAAjB,SACGhB,EAAKiB,UAAUC,KAAI,SAAAC,GAAI,OACtB,cAAC,IAAD,CAAcvB,UAAU,QAAxB,SACGuB,GADkCA,cAO7C,eAAC,IAAD,WACE,cAAC,IAAD,CAAO3E,QAASA,EAASsD,OApBpB,CAAC,GAAI,GAAI,IAoB2BhD,KAAK,YAAYmD,OAAQ,MAClE,sBAAKL,UAAU,sCAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CAAQnB,KAAM,GAAImB,UAAU,iBAC5B,sBAAMA,UAAU,gBAAhB,yBAEF,+BAAOI,EAAK0C,WAAWC,cAEzB,sBAAK/C,UAAU,sCAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CAAQnB,KAAM,GAAImB,UAAU,iBAC5B,sBAAMA,UAAU,gBAAhB,wBAEF,+BAAOI,EAAK0C,WAAWE,aAEzB,sBAAKhD,UAAU,iCAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CAAQnB,KAAM,GAAImB,UAAU,gBAC5B,sBAAMA,UAAU,gBAAhB,yBAEF,+BAAOI,EAAK0C,WAAWG,oBAI3B,M,oCClBSC,EAlFS,SAAAvG,GAEtB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WACRC,IAAMC,IAAI,wCAAwCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,WACzE,IAEH,IAAMxD,EAAU,CACZC,MAAO,CACLC,QAAS,CACPC,MAAM,IAGViC,OAAQ,CAAC,UAAW,SAAU,UAC9BgC,WAAY,CACV/D,SAAS,GAEXe,OAAQ,CAAEjB,MAAM,GAChBoG,eAAgB,CAAC,GAAI,EAAG,GACxB1F,OAAQ,CAAEE,MAAO,GACjBM,OAAQ,CAACtB,EAAM4B,QAAS5B,EAAMsE,QAAStE,EAAMuE,SAqCjD,OAAgB,OAATd,EACL,eAAC,IAAD,WACE,eAAC,IAAD,CAAYJ,UAAU,kBAAtB,UACE,cAAC,IAAD,CAAWC,IAAI,KAAf,+BACA,eAAC,KAAD,CAAsBD,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBmB,MAAM,GAAGnB,UAAU,sCAAnC,yBAGA,cAAC,IAAD,CAAcoB,KAAG,EAAjB,SACGhB,EAAKiB,UAAUC,KAAI,SAAAC,GAAI,OACtB,cAAC,IAAD,CAAcvB,UAAU,QAAxB,SACGuB,GADkCA,cAO7C,eAAC,IAAD,WACE,cAAC,IAAD,CAAOvB,UAAU,OAAOpD,QAASA,EAASsD,OArDrC,CAAC,KAAM,KAAM,KAqDwChD,KAAK,QAAQmD,OAAQ,MAlD5ED,EAAK0C,WAAWxB,KAAI,SAACC,EAAME,GAChC,IAAMC,EAAUC,EAAKJ,EAAKK,MAC1B,OACE,sBAEE5B,UAAW6B,IAAW,iCAAkC,CACtD,OAAQJ,IAAUrB,EAAK0C,WAAWhB,OAAS,IAH/C,UAME,sBAAK9B,UAAU,4BAAf,UACE,cAAC0B,EAAD,CACE7C,KAAM,GACNmB,UAAW6B,IAAW,eACnBN,EAAKQ,UAAYR,EAAKQ,cAG3B,sBAAM/B,UAAU,sBAAhB,SAAuCuB,EAAKpB,OAC5C,sCAASoB,EAAK6B,MAAd,UAEF,gCACE,iCAAO7B,EAAK8B,OAAZ,OACC9B,EAAK8B,OAAS,EACb,cAAC,IAAD,CAAcxE,KAAM,GAAImB,UAAU,uBAElC,cAAC,IAAD,CAAgBnB,KAAM,GAAImB,UAAU,2BApBnCyB,YAkDT,M,gBCFS6B,UAvEQ,WAErB,IAAMC,EAAUC,qBAAWC,KAC3B,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAaC,gBAAgB,kBAAkBC,iBAAiB,OAAOC,iBAAiB,oBACxF,eAAC,KAAD,CAAK5D,UAAU,eAAf,UACE,cAAC,IAAD,CAAK6D,GAAG,IAAIC,GAAG,KAAf,SACE,cAACC,EAAA,EAAD,CAAgBxF,QAASgF,EAAQtF,OAAOM,QAAQyF,KAAM9C,OAAQqC,EAAQtF,OAAOiD,OAAO8C,SAEtF,cAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,IAAD,CAAYvF,QAASgF,EAAQtF,OAAOM,QAAQyF,YAGhD,eAAC,KAAD,CAAKhE,UAAU,eAAf,UACE,cAAC,IAAD,CAAK6D,GAAG,IAAIC,GAAG,KAAf,SACE,cAACG,EAAA,EAAD,CAAe1F,QAASgF,EAAQtF,OAAOM,QAAQyF,KAAM/C,QAASsC,EAAQtF,OAAOgD,QAAQ+C,SAEvF,cAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,KAAf,SACE,cAACI,EAAA,EAAD,CAAcC,QAASZ,EAAQtF,OAAOkG,QAAQH,YAGlD,eAAC,KAAD,CAAKhE,UAAU,eAAf,UACE,cAAC,IAAD,CAAK6D,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,EAAD,CAASvF,QAASgF,EAAQtF,OAAOM,QAAQyF,SAE3C,cAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,KAAf,SACE,cAACM,EAAA,EAAD,CAAO7F,QAASgF,EAAQtF,OAAOM,QAAQyF,KAAMK,KAAMd,EAAQtF,OAAOoG,KAAKL,YAG3E,eAAC,KAAD,CAAKhE,UAAU,eAAf,UACE,cAAC,IAAD,CAAK6D,GAAG,IAAIC,GAAG,KAAf,SACE,eAAC,KAAD,CAAK9D,UAAU,eAAf,UACE,cAAC,IAAD,CAAK8D,GAAG,KAAR,SACE,cAAC,EAAD,CAAQvF,QAASgF,EAAQtF,OAAOM,QAAQyF,SAE1C,cAAC,IAAD,CAAKM,GAAG,IAAIR,GAAG,KAAf,SACE,cAAC,EAAD,CACEvF,QAASgF,EAAQtF,OAAOM,QAAQyF,KAChC/C,QAASsC,EAAQtF,OAAOgD,QAAQ+C,KAChC9C,OAAQqC,EAAQtF,OAAOiD,OAAO8C,SAGlC,cAAC,IAAD,CAAKM,GAAG,IAAIR,GAAG,KAAf,SACE,cAAC,EAAD,CACEvF,QAASgF,EAAQtF,OAAOM,QAAQyF,KAChC/C,QAASsC,EAAQtF,OAAOgD,QAAQ+C,KAChC9C,OAAQqC,EAAQtF,OAAOiD,OAAO8C,cAKtC,cAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,KAAf,SACE,eAAC,KAAD,CAAK9D,UAAU,eAAf,UACE,cAAC,IAAD,CAAK8D,GAAG,KAAR,SACE,cAAC,EAAD,CACEvF,QAASgF,EAAQtF,OAAOM,QAAQyF,KAChC/C,QAASsC,EAAQtF,OAAOgD,QAAQ+C,KAChC9C,OAAQqC,EAAQtF,OAAOiD,OAAO8C,SAGlC,cAAC,IAAD,CAAKF,GAAG,KAAR,SACE,cAACS,EAAA,EAAD,CAAUJ,QAASZ,EAAQtF,OAAOkG,QAAQH,sB,iCC1FxD,yEAuFeQ,IAtEK,SAAA7H,GAElB,IAAQ+G,EAA8F/G,EAA9F+G,gBAAiBC,EAA6EhH,EAA7EgH,iBAAkBc,EAA2D9H,EAA3D8H,kBAAmBC,EAAwC/H,EAAxC+H,kBAAmBd,EAAqBjH,EAArBiH,iBAEjF,OACE,sBAAK5D,UAAU,qBAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,SAAf,UACG0D,EAAkB,oBAAI1D,UAAU,wCAAd,SAAuD0D,IAAwB,GAClG,qBAAK1D,UAAU,6DAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBC,IAAI,KAApB,SACE,cAAC,IAAD,CAAM0E,GAAG,IAAT,oBAEF,cAAC,IAAD,CAAgB1E,IAAI,KAAKD,UAAU,eAAnC,SACG2D,IAEFc,EACC,cAAC,IAAD,CAAgBxE,IAAI,KAAKD,UAAU,eAAnC,SACGyE,IAGH,GAEDC,EACC,cAAC,IAAD,CAAgBzE,IAAI,KAAKD,UAAU,eAAnC,SACG0E,IAGH,GAEF,cAAC,IAAD,CAAgBzE,IAAI,KAAK2E,QAAM,EAA/B,SACGhB,gBAOb,qBAAK5D,UAAU,qEAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAgBmB,MAAM,UAAUtC,KAAK,KAAKmB,UAAU,qCAApD,SACE,cAAC,IAAD,CAAMnB,KAAM,OAEd,eAAC,IAAD,CAAcoB,IAAI,KAAKmB,KAAG,EAA1B,UACE,eAAC,IAAD,CAAcnB,IAAK4E,IAAMF,GAAG,aAA5B,UACE,cAAC,IAAD,CAAa3E,UAAU,OAAOnB,KAAM,KACpC,sBAAMmB,UAAU,eAAhB,qBAEF,eAAC,IAAD,CAAcC,IAAK4E,IAAMF,GAAG,aAA5B,UACE,cAAC,IAAD,CAAe3E,UAAU,OAAOnB,KAAM,KACtC,sBAAMmB,UAAU,eAAhB,qBAEF,eAAC,IAAD,CAAcC,IAAK4E,IAAMF,GAAG,cAA5B,UACE,cAAC,IAAD,CAAM3E,UAAU,OAAOnB,KAAM,KAC7B,sBAAMmB,UAAU,eAAhB,sBAEF,eAAC,IAAD,CAAcC,IAAK4E,IAAMF,GAAG,iBAA5B,UACE,cAAC,IAAD,CAAU3E,UAAU,OAAOnB,KAAM,KACjC,sBAAMmB,UAAU,eAAhB,wC,uDC9EhB,uDAgIeoE,IA/GD,SAAAzH,GACZ,IAAMC,EAAU,CACZC,MAAO,CACLwD,OAAQ,IACRnD,KAAM,QACNC,WAAY,CACVF,SAAS,EACTK,KAAM,EACND,KAAM,EACND,IAAK,EACLG,QAAS,IAEXT,QAAS,CACPC,MAAM,GAERkC,QAAS,GAEXxB,OAAQ,CACNE,MAAO,GAETqD,WAAY,CACV8D,WAAY,CACVC,UAAW,CAAC,aAGhB/G,OAAQ,CAAEjB,MAAM,GAChBkB,OAAQ,CAACtB,EAAM4B,QAAS5B,EAAM0H,MAC9BlC,YAAa,CACX6C,MAAO,CACLC,SAAU,CACRC,aAAc,CAAC,UAAW,cAAe,cAAe,cAAe,cAAe,eACtFC,gBAAiB,iBAIvBjH,KAAM,CACJhB,KAAM,WACNiB,SAAU,CACRC,MAAO,OACPE,iBAAkB,CAAC3B,EAAM4B,QAAS5B,EAAM0H,MACxC7F,eAAgB,EAChBtB,KAAM,aACNuB,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,IAAK,IAAK,OAGzBK,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5CJ,QAAS,CACPC,KAAM,GAERY,MAAO,CACL1C,MAAM,GAERa,KAAM,CACJb,MAAM,EACNe,QAAS,CACPC,QAAS,MAcjB,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAYiC,UAAU,wDAAtB,UACE,gCACE,cAAC,IAAD,CAAWA,UAAU,QAAQC,IAAI,KAAjC,mBAGA,cAAC,IAAD,+BAGF,eAAC,KAAD,CAAsBD,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBmB,MAAM,GAAGnB,UAAU,sCAAnC,SACE,cAAC,IAAD,CAAcnB,KAAM,GAAImB,UAAU,qBAEpC,eAAC,IAAD,CAAcoB,KAAG,EAAjB,UACE,cAAC,IAAD,CAAcpB,UAAU,QAAxB,0BACA,cAAC,IAAD,CAAcA,UAAU,QAAxB,wBACA,cAAC,IAAD,CAAcA,UAAU,QAAxB,gCAKN,eAAC,IAAD,WACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CAAQnB,KAAM,GAAImB,UAAU,uBAC5B,oBAAIA,UAAU,OAAd,wBAGJ,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CAAQnB,KAAM,GAAImB,UAAU,oBAC5B,oBAAIA,UAAU,OAAd,yBAGJ,cAAC,IAAD,CAAOpD,QAASA,EAASsD,OA7CpB,CACP,CACEC,KAAM,QACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,KAE9B,CACED,KAAM,QACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,MAsCclD,KAAK,QAAQmD,OAAQ,c,8GCYvD+E,IA9GK,SAAAzI,GAElB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WAER,OADAC,IAAMC,IAAI,qCAAqCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,SAChE,kBAAMI,EAAQ,SACpB,IAEH,IAAM5D,EAAU,CACZC,MAAO,CACLwI,UAAW,CAAEpI,SAAS,GACtBH,QAAS,CAAEC,MAAM,IAEnBa,KAAM,CACJb,MAAM,EACNe,QAAS,CACPT,KAAM,EACNiI,MAAO,IAGXC,OAAQ,CACNzG,MAAO,CACL0G,OAAQ,SAGZvH,OAAQ,CAAC,UAAW,UAAWtB,EAAM4B,QAAS,UAAW,UAAW,WACpE4D,YAAa,CACXsD,IAAK,CACHC,YAAa,MACbC,aAAa,EACbC,aAAc,CAAC,MAGnB9F,QAAS,CACPC,EAAG,CAAEhD,MAAM,IAEbgC,MAAO,CACL7B,KAAM,YAUZ,OAAgB,OAATkD,EACL,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,KAAD,CAAKJ,UAAU,QAAf,UACE,eAAC,IAAD,CACE8D,GAAI,CAAEjF,KAAM,EAAGgH,MAAO,GACtBC,GAAI,CAAED,MAAO,GACb7F,UAAU,0DAHZ,UAKE,sBAAKA,UAAU,4BAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+B+F,YAAW3F,EAAK4F,YAC/C,cAAC,IAAD,CAAUhG,UAAU,eAApB,0BACA,qBAAIA,UAAU,gBAAd,UACE,sBAAMA,UAAU,qBAAhB,SAAsCI,EAAK6F,SAC3C,sBAAMjG,UAAU,YAAhB,kCAGJ,cAAC,IAAD,CAAQmB,MAAM,UAAd,6BAEF,eAAC,IAAD,CACE2C,GAAI,CAAEjF,KAAM,EAAGgH,MAAO,GACtBC,GAAI,CAAED,MAAO,GACb7F,UAAU,sDAHZ,UAKE,eAAC,KAAD,CAAsBA,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBmB,MAAM,GAAGnB,UAAU,sCAAnC,yBAGA,cAAC,IAAD,CAAcoB,KAAG,EAAjB,SACGhB,EAAKiB,UAAUC,KAAI,SAAAC,GAAI,OACtB,cAAC,IAAD,CAAcvB,UAAU,QAAxB,SACGuB,GADkCA,WAM3C,cAAC,IAAD,CAAO3E,QAASA,EAASsD,OA3CxB,CACP,CACEC,KAAM,WACNC,KAAM,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,MAwCUlD,KAAK,MAAMmD,OAAQ,YAGhE,uBACA,eAAC,KAAD,CAAKL,UAAU,QAAf,UACE,eAAC,IAAD,CAAKA,UAAU,OAAOsE,GAAG,IAAIR,GAAG,KAAhC,UACE,oBAAG9D,UAAU,QAAb,oBAA6BI,EAAK8F,QAClC,cAAC,KAAD,CAAUlG,UAAU,6BAA6ByC,MAAM,UAEzD,eAAC,IAAD,CAAKzC,UAAU,OAAOsE,GAAG,IAAIR,GAAG,KAAhC,UACE,oBAAG9D,UAAU,QAAb,oBAA6B+F,YAAW3F,EAAK+F,UAC7C,cAAC,KAAD,CAAUnG,UAAU,kDAAkDyC,MAAM,UAE9E,eAAC,IAAD,CAAK6B,GAAG,IAAIR,GAAG,KAAf,UACE,oBAAG9D,UAAU,QAAb,wBAAiCI,EAAKgG,UAAtC,OACA,cAAC,KAAD,CAAUpG,UAAU,iDAAiDyC,MAAM,UAE7E,eAAC,IAAD,CAAK6B,GAAG,IAAIR,GAAG,KAAf,UACE,oBAAG9D,UAAU,QAAb,uBAAgCI,EAAKiG,SAArC,QACA,cAAC,KAAD,CAAUrG,UAAU,kDAAkDyC,MAAM,kBAKlF,O,qGCRSsB,IAvGQ,SAAApH,GAErB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WAER,OADAC,IAAMC,IAAI,wCAAwCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,SACnE,kBAAMI,EAAQ,SACpB,IAEH,IAAM5D,EAAU,CACZuF,YAAa,CACXC,UAAW,CACTvD,KAAM,IACNI,QAAS,GACTqH,YAAa,IACbC,SAAU,IACVlE,OAAQ,CACNxD,KAAM,OAERyD,MAAO,CACLwC,WAAY,OACZvC,YAAa,QAEfvB,WAAY,CACVb,KAAM,CACJlB,SAAU,EACVG,WAAY,aACZD,SAAU,QAEZsD,MAAO,CACLxD,QAAS,GACTG,WAAY,aACZD,SAAU,eAKlBlB,OAAQ,CAACtB,EAAMuE,QACfhD,KAAM,CACJhB,KAAM,WACNiB,SAAU,CACRC,MAAO,OACPlB,KAAM,aACNsB,eAAgB,GAChBF,iBAAkB,CAAC3B,EAAM4B,SACzBF,eAAe,EACfI,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,OAGflB,OAAQ,CACNqD,UAAW,GAEb9B,OAAQ,CAAC,sBAIb,OAAgB,OAAToB,EACL,eAAC,IAAD,WACE,eAAC,IAAD,CAAYJ,UAAU,OAAtB,UACE,cAAC,IAAD,CAAWC,IAAI,KAAf,SAAqBG,EAAKoG,QAC1B,eAAC,KAAD,CAAsBxG,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBmB,MAAM,GAAGnB,UAAU,sCAAnC,yBAGA,cAAC,IAAD,CAAcoB,KAAG,EAAjB,SACGhB,EAAKiB,UAAUC,KAAI,SAAAC,GAAI,OACtB,cAAC,IAAD,CAAcvB,UAAU,QAAxB,SACGuB,GADkCA,cAO7C,eAAC,IAAD,WACE,eAAC,KAAD,WACE,eAAC,IAAD,CAAKuC,GAAG,IAAI9D,UAAU,2CAAtB,UACE,oBAAIA,UAAU,mCAAd,SAAkDI,EAAKqG,cACvD,cAAC,IAAD,yBAEF,cAAC,IAAD,CAAK3C,GAAG,KAAK9D,UAAU,gCAAvB,SACE,cAAC,IAAD,CAAOpD,QAASA,EAASsD,OA1BxB,CAAC,IA0BuChD,KAAK,YAAYmD,OAAQ,IAAKqG,GAAG,8BAG9E,sBAAK1G,UAAU,sCAAf,UACE,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,CAAUA,UAAU,QAApB,yBACA,sBAAMA,UAAU,uBAAhB,SAAwCI,EAAKuG,eAE/C,sBAAK3G,UAAU,cAAf,UACE,cAAC,IAAD,CAAUA,UAAU,QAApB,0BACA,sBAAMA,UAAU,uBAAhB,SAAwCI,EAAKwG,gBAE/C,sBAAK5G,UAAU,cAAf,UACE,cAAC,IAAD,CAAUA,UAAU,QAApB,2BACA,uBAAMA,UAAU,uBAAhB,UAAwCI,EAAKyG,aAA7C,mBAKN,O,iCC3HN,qCAiHetC,IA3GE,SAAC,GAAiB,IAC3B3H,EAAU,CACdC,MAAO,CACLC,QAAS,CACPC,MAAM,IAGViE,WAAY,CACV/D,SAAS,GAEXe,OAAQ,CAAEjB,MAAM,GAChBoG,eAAgB,CAAC,GAAI,EAAG,GACxBnE,OAAQ,CAAC,MAAO,UAAW,WAC3BvB,OAAQ,CAAEE,MAAO,GACjBM,OAAQ,CAAC,YAAa,YAdQ,EAAdkG,SAehBvG,KAAM,CACJE,QAAS,CACPwH,OAAQ,GACRvH,QAAS,EACTV,MAAO,KAGX8E,YAAa,CACX2E,IAAK,CACHR,YAAa,GACbS,MAAO,CACL/H,OAAQ,CACNjC,MAAM,EACNoD,KAAM,CACJlB,QAAS,IAEXwD,MAAO,CACLxD,SAAU,GACVU,UAFK,SAEKC,GACR,MAAM,GAAN,OAAUoH,SAASpH,GAAnB,QAGJ+C,MAAO,CACL5F,MAAM,EACNkC,QAAS,GACT2D,MAAO,MACPjD,UAJK,WAKH,MAAO,YAOnBsH,WAAY,CACV,CACEC,WAAY,KACZtK,QAAS,CACPC,MAAO,CACLwD,OAAQ,OAId,CACE6G,WAAY,KACZtK,QAAS,CACPC,MAAO,CACLwD,OAAQ,OAId,CACE6G,WAAY,KACZtK,QAAS,CACPC,MAAO,CACLwD,OAAQ,OAId,CACE6G,WAAY,IACZtK,QAAS,CACPC,MAAO,CACLwD,OAAQ,SAOlB,OACE,cAAC,IAAD,CAAML,UAAU,gBAAhB,SACE,cAAC,IAAD,UACE,eAAC,KAAD,WACE,eAAC,IAAD,CAAK8F,GAAG,IAAR,UACE,cAAC,IAAD,CAAW9F,UAAU,OAArB,sBACA,qBAAKA,UAAU,eAAf,wBACA,oBAAIA,UAAU,OAAd,sBACA,eAAC,IAAD,CAAUA,UAAU,0BAApB,UACE,sBAAMA,UAAU,YAAhB,mBACA,yEAGJ,cAAC,IAAD,CAAK8F,GAAG,IAAR,SACE,cAAC,IAAD,CAAOlJ,QAASA,EAASsD,OAAQ,CAAC,GAAI,GAAI,IAAKhD,KAAK,QAAQmD,OAAQ,iB,8GCAjE6D,IA9FM,SAAAvH,GAEnB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WAER,OADAC,IAAMC,IAAI,sCAAsCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,SACjE,kBAAMI,EAAQ,SACpB,IAEH,IAAM5D,EAAU,CACZC,MAAO,CACLwI,UAAW,CACTpI,SAAS,GAEXE,WAAY,CACVF,SAAS,EACTK,KAAM,EACND,KAAM,EACND,IAAK,EACLG,QAAS,KAGbU,OAAQ,CAAC,WACTkE,YAAa,CACXC,UAAW,CACTnD,QAAS,GACTqH,YAAa,IACbC,SAAU,IACVlE,OAAQ,CACNxD,KAAM,OAERyD,MAAO,CACLwC,WAAY,UACZvC,YAAa,OAEfvB,WAAY,CACVb,KAAM,CACJpD,MAAM,GAER0F,MAAO,CACLtB,MAAO,UACP/B,WAAY,aACZD,SAAU,UACVuD,WAAY,UAKpBxE,KAAM,CACJhB,KAAM,WACNiB,SAAU,CACRC,MAAO,OACPlB,KAAM,aACNsB,eAAgB,GAChBF,iBAAkB,CAAC3B,EAAMwH,SACzB9F,eAAe,EACfI,YAAa,EACbC,UAAW,EACXC,MAAO,CAAC,EAAG,OAGflB,OAAQ,CACNoF,QAAS,SAEXjF,KAAM,CACJE,QAAS,CACPC,OAAQ,MAMhB,OAAgB,OAATqC,EACL,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWH,IAAI,KAAf,2BACA,cAAC,IAAD,CAAYpB,KAAM,GAAImB,UAAU,iCAElC,cAAC,IAAD,CAAUA,UAAU,MAApB,SACE,cAAC,IAAD,CAAOpD,QAASA,EAASsD,OATpB,CAAC,IASmChD,KAAK,YAAYmD,OAAQ,QAEpE,eAAC,KAAD,CAAKL,UAAU,8BAAf,UACE,eAAC,IAAD,CAAK8F,GAAG,IAAI9F,UAAU,kBAAtB,UACE,cAAC,IAAD,CAAUA,UAAU,kBAApB,uBACA,oBAAIA,UAAU,iBAAd,SAAgCI,EAAK+G,eAEvC,eAAC,IAAD,CAAKrB,GAAG,IAAI9F,UAAU,OAAtB,UACE,cAAC,IAAD,CAAUA,UAAU,kBAApB,yBACA,oBAAIA,UAAU,iBAAd,SAAgCI,EAAKgH,sBAIzC,O,qGC6DSnD,IAhJO,SAAAtH,GAEpB,MAAwB4D,mBAAS,MAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAEAC,qBAAU,WAER,OADAC,IAAMC,IAAI,uCAAuCC,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIT,SAClE,kBAAMI,EAAQ,SACpB,IAEH,IAAM6G,EAAiB,CACnBxK,MAAO,CACLyK,SAAS,EACTpK,KAAM,MACNJ,QAAS,CAAEC,MAAM,IAEnBa,KAAM,CACJE,QAAS,CACPV,KAAM,GACNW,QAAS,IAEX0B,MAAO,CACL8H,MAAO,CAAExK,MAAM,KAGnBgC,MAAO,CACLO,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrEN,OAAQ,CACNE,MAAO,CACLjB,OAAQ,UACRkB,SAAU,YAGdE,UAAW,CACTtC,MAAM,GAERwC,WAAY,CACVxC,MAAM,IAGViB,OAAQ,CACNjB,MAAM,GAERiE,WAAY,CACV/D,SAAS,GAEXgB,OAAQ,CAACtB,EAAM4B,QAAS5B,EAAMsE,SAC9BkB,YAAa,CACXsD,IAAK,CACHC,YAAa,MACbE,aAAc,CAAC,IAEjBD,aAAa,GAEflG,MAAO,CACLT,OAAQ,CACNE,MAAO,CACLjB,OAAQ,UACRkB,SAAU,cAwBlBqI,EAAgB,CACd3K,MAAO,CACLC,QAAS,CAAEC,MAAM,GACjBC,KAAM,CAAEC,SAAS,GACjBC,KAAM,OACNmI,UAAW,CAAEpI,SAAS,IAExBQ,OAAQ,CACNC,MAAO,SACPoD,UAAW,CAAC,EAAG,GACfnD,MAAO,CAAC,IAEVM,OAAQ,CAACtB,EAAM4B,QAAS,WACxBuB,QAAS,CACP7C,SAAS,IAIf,OAAgB,OAATmD,EACL,cAAC,IAAD,CAAMJ,UAAU,sBAAhB,SACE,eAAC,KAAD,CAAKA,UAAU,OAAf,UACE,eAAC,IAAD,CAAKA,UAAU,yBAAyBsE,GAAG,IAAIwB,GAAG,KAAlD,UACE,sBAAK9F,UAAU,4DAAf,UACE,cAAC,IAAD,CAAWA,UAAU,gBAArB,4BACA,sBAAKA,UAAU,4BAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,sBAAMA,UAAU,+CAChB,8CAEF,sBAAKA,UAAU,4BAAf,UACE,sBAAMA,UAAU,+CAChB,oDAIN,cAAC,IAAD,CAAO0G,GAAG,uBAAuBxJ,KAAK,MAAMmD,OAAO,MAAMzD,QAASyK,EAAgBnH,OAtDxE,CACd,CACEC,KAAM,UACNC,KAAM,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,KAE/C,CACED,KAAM,UACNC,KAAM,EAAE,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,IAAK,YAiDnD,eAAC,IAAD,CAAKJ,UAAU,iBAAiBsE,GAAG,IAAIwB,GAAG,KAA1C,UACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAgB9F,UAAU,kBAAkByH,SAAO,EAACtG,MAAM,UAAUtC,KAAK,KAAK6I,OAAK,EAAnF,kBAGA,cAAC,IAAD,UACGtH,EAAKuH,MAAMrG,KAAI,SAAAC,GAAI,OAClB,cAAC,IAAD,CAAcvB,UAAU,QAAxB,SACGuB,GADkCA,WAM3C,qBAAIvB,UAAU,QAAd,cAAwBI,EAAKwH,SAC7B,sBAAK5H,UAAU,gCAAf,UACE,sBAAMA,UAAU,kBAAhB,qBACA,+BAAOI,EAAKyH,YAEd,cAAC,IAAD,CAAOnB,GAAG,eAAexJ,KAAK,OAAOmD,OAAO,KAAKzD,QAAS4K,EAAetH,OA/D5D,CACjB,CACEE,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEjD,CACEA,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,QA2D3C,cAAC,IAAD,CAAQe,MAAM,UAAd,qCAIJ","file":"static/js/42.17bd49ea.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport Chart from 'react-apexcharts'\r\nimport { Settings } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText } from 'reactstrap'\r\n\r\nconst Sales2 = props => {\r\n  const options = {\r\n      chart: {\r\n        toolbar: { show: false },\r\n        zoom: { enabled: false },\r\n        type: 'line',\r\n        dropShadow: {\r\n          enabled: true,\r\n          top: 18,\r\n          left: 2,\r\n          blur: 5,\r\n          opacity: 0.2\r\n        },\r\n        offsetX: -10\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        width: 4\r\n      },\r\n      grid: {\r\n        borderColor: '#ebe9f1',\r\n        padding: {\r\n          top: -20,\r\n          bottom: 5,\r\n          left: 20\r\n        }\r\n      },\r\n      legend: {\r\n        show: false\r\n      },\r\n      colors: ['#df87f2'],\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          shade: 'dark',\r\n          inverseColors: false,\r\n          gradientToColors: [props.primary],\r\n          shadeIntensity: 1,\r\n          type: 'horizontal',\r\n          opacityFrom: 1,\r\n          opacityTo: 1,\r\n          stops: [0, 100, 100, 100]\r\n        }\r\n      },\r\n      markers: {\r\n        size: 0,\r\n        hover: {\r\n          size: 5\r\n        }\r\n      },\r\n      xaxis: {\r\n        labels: {\r\n          offsetY: 5,\r\n          style: {\r\n            colors: '#b9b9c3',\r\n            fontSize: '0.857rem',\r\n            fontFamily: 'Montserrat'\r\n          }\r\n        },\r\n        axisTicks: {\r\n          show: false\r\n        },\r\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n        axisBorder: {\r\n          show: false\r\n        },\r\n        tickPlacement: 'on'\r\n      },\r\n      yaxis: {\r\n        tickAmount: 5,\r\n        labels: {\r\n          style: {\r\n            colors: '#b9b9c3',\r\n            fontSize: '0.857rem',\r\n            fontFamily: 'Montserrat'\r\n          },\r\n          formatter(val) {\r\n            return val > 999 ? `${(val / 1000).toFixed(1)}k` : val\r\n          }\r\n        }\r\n      },\r\n      tooltip: {\r\n        x: { show: false }\r\n      }\r\n    },\r\n    series = [\r\n      {\r\n        name: 'Sales',\r\n        data: [140, 180, 150, 205, 160, 295, 125, 255, 205, 305, 240, 295]\r\n      }\r\n    ]\r\n  return (\r\n    <Card>\r\n      <CardHeader className='align-items-start'>\r\n        <div>\r\n          <CardTitle className='mb-25' tag='h4'>\r\n            Sales\r\n          </CardTitle>\r\n          <CardText className='mb-0'>2020 Total Sales: 12.84k</CardText>\r\n        </div>\r\n        <Settings size={18} className='text-muted cursor-pointer' />\r\n      </CardHeader>\r\n      <CardBody className='pb-0'>\r\n        <Chart options={options} series={series} type='line' height={240} />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default Sales2\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport Chart from 'react-apexcharts'\r\nimport { Settings } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText } from 'reactstrap'\r\n\r\nconst Revenue = props => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-analytics/revenue').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const options = {\r\n      chart: {\r\n        toolbar: { show: false },\r\n        zoom: { enabled: false },\r\n        type: 'line',\r\n        offsetX: -10\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        dashArray: [0, 12],\r\n        width: [4, 3]\r\n      },\r\n      legend: {\r\n        show: false\r\n      },\r\n      colors: ['#d0ccff', '#ebe9f1'],\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          shade: 'dark',\r\n          inverseColors: false,\r\n          gradientToColors: [props.primary, '#ebe9f1'],\r\n          shadeIntensity: 1,\r\n          type: 'horizontal',\r\n          opacityFrom: 1,\r\n          opacityTo: 1,\r\n          stops: [0, 100, 100, 100]\r\n        }\r\n      },\r\n      markers: {\r\n        size: 0,\r\n        hover: {\r\n          size: 5\r\n        }\r\n      },\r\n      xaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: '#b9b9c3',\r\n            fontSize: '1rem'\r\n          }\r\n        },\r\n        axisTicks: {\r\n          show: false\r\n        },\r\n        categories: ['01', '05', '09', '13', '17', '21', '26', '31'],\r\n        axisBorder: {\r\n          show: false\r\n        },\r\n        tickPlacement: 'on'\r\n      },\r\n      yaxis: {\r\n        tickAmount: 5,\r\n        labels: {\r\n          style: {\r\n            colors: '#b9b9c3',\r\n            fontSize: '1rem'\r\n          },\r\n          formatter(val) {\r\n            return val > 999 ? `${(val / 1000).toFixed(0)}k` : val\r\n          }\r\n        }\r\n      },\r\n      grid: {\r\n        borderColor: '#e7eef7',\r\n        padding: {\r\n          top: -20,\r\n          bottom: -10,\r\n          left: 20\r\n        }\r\n      },\r\n      tooltip: {\r\n        x: { show: false }\r\n      }\r\n    },\r\n    series = [\r\n      {\r\n        name: 'This Month',\r\n        data: [45000, 47000, 44800, 47500, 45500, 48000, 46500, 48600]\r\n      },\r\n      {\r\n        name: 'Last Month',\r\n        data: [46000, 48000, 45500, 46600, 44500, 46500, 45000, 47000]\r\n      }\r\n    ]\r\n  return data !== null ? (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Revenue</CardTitle>\r\n        <Settings size={18} className='text-muted cursor-pointer' />\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='d-flex justify-content-start mb-3'>\r\n          <div className='me-2'>\r\n            <CardText className='mb-50'>This Month</CardText>\r\n            <h3 className='fw-bolder'>\r\n              <sup className='font-medium-1 fw-bold me-25'>$</sup>\r\n              <span className='text-primary'>86,589</span>\r\n            </h3>\r\n          </div>\r\n          <div>\r\n            <CardText className='mb-50'>Last Month</CardText>\r\n            <h3 className='fw-bolder'>\r\n              <sup className='font-medium-1 fw-bold me-25'>$</sup>\r\n              <span>73,683</span>\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <Chart options={options} series={series} type='line' height={240} />\r\n      </CardBody>\r\n    </Card>\r\n  ) : null\r\n}\r\nexport default Revenue\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport classnames from 'classnames'\r\nimport * as Icon from 'react-feather'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nconst Customers = props => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-analytics/customers').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const options = {\r\n      chart: {\r\n        toolbar: {\r\n          show: false\r\n        }\r\n      },\r\n      labels: ['New', 'Returning', 'Referrals'],\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      legend: { show: false },\r\n      stroke: {\r\n        width: 4\r\n      },\r\n      colors: [props.primary, props.warning, props.danger]\r\n    },\r\n    series = [690, 258, 149]\r\n\r\n  const renderChartInfo = () => {\r\n    return data.listData.map((item, index) => {\r\n      const IconTag = Icon[item.icon]\r\n\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={classnames('d-flex justify-content-between', {\r\n            'mb-1': index !== data.listData.length - 1\r\n          })}\r\n        >\r\n          <div className='d-flex align-items-center'>\r\n            <IconTag\r\n              size={15}\r\n              className={classnames({\r\n                [item.iconColor]: item.iconColor\r\n              })}\r\n            />\r\n            <span className='fw-bold ms-75'>{item.text}</span>\r\n          </div>\r\n          <span>{item.result}</span>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return data !== null ? (\r\n    <Card>\r\n      <CardHeader className='align-items-end'>\r\n        <CardTitle tag='h4'>Customers</CardTitle>\r\n        <UncontrolledDropdown className='chart-dropdown'>\r\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\r\n            Last 7 days\r\n          </DropdownToggle>\r\n          <DropdownMenu end>\r\n            {data.last_days.map(item => (\r\n              <DropdownItem className='w-100' key={item}>\r\n                {item}\r\n              </DropdownItem>\r\n            ))}\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Chart options={options} series={series} type='pie' height={325} />\r\n        <div className='pt-25'>{renderChartInfo()}</div>\r\n      </CardBody>\r\n    </Card>\r\n  ) : null\r\n}\r\nexport default Customers\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport Chart from 'react-apexcharts'\r\nimport { Circle } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nconst ProductOrders = props => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-analytics/product-orders').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const options = {\r\n      labels: ['Finished', 'Pending', 'Rejected'],\r\n      plotOptions: {\r\n        radialBar: {\r\n          size: 150,\r\n          hollow: {\r\n            size: '20%'\r\n          },\r\n          track: {\r\n            strokeWidth: '100%',\r\n            margin: 15\r\n          },\r\n          dataLabels: {\r\n            value: {\r\n              fontSize: '1rem',\r\n              colors: '#5e5873',\r\n              fontWeight: '500',\r\n              offsetY: 5\r\n            },\r\n            total: {\r\n              show: true,\r\n              label: 'Total',\r\n              fontSize: '1.286rem',\r\n              colors: '#5e5873',\r\n              fontWeight: '500',\r\n\r\n              formatter() {\r\n                // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\r\n                return 42459\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      colors: [props.primary, props.warning, props.danger],\r\n      stroke: {\r\n        lineCap: 'round'\r\n      },\r\n      chart: {\r\n        height: 355,\r\n        dropShadow: {\r\n          enabled: true,\r\n          blur: 3,\r\n          left: 1,\r\n          top: 1,\r\n          opacity: 0.1\r\n        }\r\n      }\r\n    },\r\n    series = [70, 52, 26]\r\n\r\n  return data !== null ? (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Product Orders</CardTitle>\r\n        <UncontrolledDropdown className='chart-dropdown'>\r\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\r\n            Last 7 days\r\n          </DropdownToggle>\r\n          <DropdownMenu end>\r\n            {data.last_days.map(item => (\r\n              <DropdownItem className='w-100' key={item}>\r\n                {item}\r\n              </DropdownItem>\r\n            ))}\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Chart options={options} series={series} type='radialBar' height={325} />\r\n        <div className='d-flex justify-content-between mb-1'>\r\n          <div className='d-flex align-items-center'>\r\n            <Circle size={15} className='text-primary' />\r\n            <span className='fw-bold ms-75'>Finished</span>\r\n          </div>\r\n          <span>{data.chart_info.finished}</span>\r\n        </div>\r\n        <div className='d-flex justify-content-between mb-1'>\r\n          <div className='d-flex align-items-center'>\r\n            <Circle size={15} className='text-warning' />\r\n            <span className='fw-bold ms-75'>Pending</span>\r\n          </div>\r\n          <span>{data.chart_info.pending}</span>\r\n        </div>\r\n        <div className='d-flex justify-content-between'>\r\n          <div className='d-flex align-items-center'>\r\n            <Circle size={15} className='text-danger' />\r\n            <span className='fw-bold ms-75'>Rejected</span>\r\n          </div>\r\n          <span>{data.chart_info.rejected}</span>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  ) : null\r\n}\r\nexport default ProductOrders\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport classnames from 'classnames'\r\nimport Chart from 'react-apexcharts'\r\nimport * as Icon from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nconst SessionByDevice = props => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-analytics/sessions-device').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const options = {\r\n      chart: {\r\n        toolbar: {\r\n          show: false\r\n        }\r\n      },\r\n      labels: ['Desktop', 'Mobile', 'Tablet'],\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      legend: { show: false },\r\n      comparedResult: [2, -3, 8],\r\n      stroke: { width: 0 },\r\n      colors: [props.primary, props.warning, props.danger]\r\n    },\r\n    series = [58.6, 34.9, 6.5]\r\n\r\n  const renderChartInfo = () => {\r\n    return data.chart_info.map((item, index) => {\r\n      const IconTag = Icon[item.icon]\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={classnames('d-flex justify-content-between', {\r\n            'mb-1': index !== data.chart_info.length - 1\r\n          })}\r\n        >\r\n          <div className='d-flex align-items-center'>\r\n            <IconTag\r\n              size={17}\r\n              className={classnames({\r\n                [item.iconColor]: item.iconColor\r\n              })}\r\n            />\r\n            <span className='fw-bold ms-75 me-25'>{item.name}</span>\r\n            <span>- {item.usage}%</span>\r\n          </div>\r\n          <div>\r\n            <span>{item.upDown}%</span>\r\n            {item.upDown > 0 ? (\r\n              <Icon.ArrowUp size={14} className='ms-25 text-success' />\r\n            ) : (\r\n              <Icon.ArrowDown size={14} className='ms-25 text-danger' />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return data !== null ? (\r\n    <Card>\r\n      <CardHeader className='align-items-end'>\r\n        <CardTitle tag='h4'>Session By Device</CardTitle>\r\n        <UncontrolledDropdown className='chart-dropdown'>\r\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\r\n            Last 7 days\r\n          </DropdownToggle>\r\n          <DropdownMenu end>\r\n            {data.last_days.map(item => (\r\n              <DropdownItem className='w-100' key={item}>\r\n                {item}\r\n              </DropdownItem>\r\n            ))}\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Chart className='my-1' options={options} series={series} type='donut' height={300} />\r\n        {renderChartInfo()}\r\n      </CardBody>\r\n    </Card>\r\n  ) : null\r\n}\r\nexport default SessionByDevice\r\n","// ** React Imports\r\nimport { Fragment, useContext } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport Sales from './Sales'\r\nimport Sales2 from './Sales2'\r\nimport Revenue from './Revenue'\r\nimport Earnings from './Earnings'\r\nimport Customers from './Customers'\r\nimport AvgSession from './AvgSessions'\r\nimport GoalOverview from './GoalOverview'\r\nimport ProductOrders from './ProductOrders'\r\nimport RevenueReport from './RevenueReport'\r\nimport SupportTracker from './SupportTracker'\r\nimport SessionByDevice from './SessionByDevice'\r\n\r\n// ** Context\r\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/charts/apex-charts.scss'\r\n\r\nconst AnalyticsCards = () => {\r\n  // ** Context\r\n  const context = useContext(ThemeColors)\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Analytics Cards' breadCrumbParent='Card' breadCrumbActive='Analytics Cards' />\r\n      <Row className='match-height'>\r\n        <Col lg='6' sm='12'>\r\n          <SupportTracker primary={context.colors.primary.main} danger={context.colors.danger.main} />\r\n        </Col>\r\n        <Col lg='6' sm='12'>\r\n          <AvgSession primary={context.colors.primary.main} />\r\n        </Col>\r\n      </Row>\r\n      <Row className='match-height'>\r\n        <Col lg='8' sm='12'>\r\n          <RevenueReport primary={context.colors.primary.main} warning={context.colors.warning.main} />\r\n        </Col>\r\n        <Col lg='4' sm='12'>\r\n          <GoalOverview success={context.colors.success.main} />\r\n        </Col>\r\n      </Row>\r\n      <Row className='match-height'>\r\n        <Col lg='8' sm='12'>\r\n          <Revenue primary={context.colors.primary.main} />\r\n        </Col>\r\n        <Col lg='4' sm='12'>\r\n          <Sales primary={context.colors.primary.main} info={context.colors.info.main} />\r\n        </Col>\r\n      </Row>\r\n      <Row className='match-height'>\r\n        <Col lg='8' sm='12'>\r\n          <Row className='match-height'>\r\n            <Col sm='12'>\r\n              <Sales2 primary={context.colors.primary.main} />\r\n            </Col>\r\n            <Col md='6' sm='12'>\r\n              <SessionByDevice\r\n                primary={context.colors.primary.main}\r\n                warning={context.colors.warning.main}\r\n                danger={context.colors.danger.main}\r\n              />\r\n            </Col>\r\n            <Col md='6' sm='12'>\r\n              <Customers\r\n                primary={context.colors.primary.main}\r\n                warning={context.colors.warning.main}\r\n                danger={context.colors.danger.main}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col lg='4' sm='12'>\r\n          <Row className='match-height'>\r\n            <Col sm='12'>\r\n              <ProductOrders\r\n                primary={context.colors.primary.main}\r\n                warning={context.colors.warning.main}\r\n                danger={context.colors.danger.main}\r\n              />\r\n            </Col>\r\n            <Col sm='12'>\r\n              <Earnings success={context.colors.success.main} />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AnalyticsCards\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** Third Party Components\r\nimport Chart from 'react-apexcharts'\r\nimport { MoreVertical, Circle } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nconst Sales = props => {\r\n  const options = {\r\n      chart: {\r\n        height: 300,\r\n        type: 'radar',\r\n        dropShadow: {\r\n          enabled: true,\r\n          blur: 8,\r\n          left: 1,\r\n          top: 1,\r\n          opacity: 0.2\r\n        },\r\n        toolbar: {\r\n          show: false\r\n        },\r\n        offsetY: 5\r\n      },\r\n      stroke: {\r\n        width: 0\r\n      },\r\n      dataLabels: {\r\n        background: {\r\n          foreColor: ['#ebe9f1']\r\n        }\r\n      },\r\n      legend: { show: false },\r\n      colors: [props.primary, props.info],\r\n      plotOptions: {\r\n        radar: {\r\n          polygons: {\r\n            strokeColors: ['#ebe9f1', 'transparent', 'transparent', 'transparent', 'transparent', 'transparent'],\r\n            connectorColors: 'transparent'\r\n          }\r\n        }\r\n      },\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          shade: 'dark',\r\n          gradientToColors: [props.primary, props.info],\r\n          shadeIntensity: 1,\r\n          type: 'horizontal',\r\n          opacityFrom: 1,\r\n          opacityTo: 1,\r\n          stops: [0, 100, 100, 100]\r\n        }\r\n      },\r\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n      markers: {\r\n        size: 0\r\n      },\r\n      yaxis: {\r\n        show: false\r\n      },\r\n      grid: {\r\n        show: false,\r\n        padding: {\r\n          bottom: -27\r\n        }\r\n      }\r\n    },\r\n    series = [\r\n      {\r\n        name: 'Sales',\r\n        data: [90, 50, 86, 40, 100, 20]\r\n      },\r\n      {\r\n        name: 'Visit',\r\n        data: [70, 75, 70, 76, 20, 85]\r\n      }\r\n    ]\r\n  return (\r\n    <Card>\r\n      <CardHeader className='d-flex justify-content-between align-items-start pb-1'>\r\n        <div>\r\n          <CardTitle className='mb-25' tag='h4'>\r\n            Sales\r\n          </CardTitle>\r\n          <CardText>Last 6 months</CardText>\r\n        </div>\r\n\r\n        <UncontrolledDropdown className='chart-dropdown'>\r\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\r\n            <MoreVertical size={18} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu end>\r\n            <DropdownItem className='w-100'>Last 28 Days</DropdownItem>\r\n            <DropdownItem className='w-100'>Last Month</DropdownItem>\r\n            <DropdownItem className='w-100'>Last Year</DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        <div className='d-inline-block me-1'>\r\n          <div className='d-flex align-items-center'>\r\n            <Circle size={13} className='text-primary me-50' />\r\n            <h6 className='mb-0'>Sales</h6>\r\n          </div>\r\n        </div>\r\n        <div className='d-inline-block'>\r\n          <div className='d-flex align-items-center'>\r\n            <Circle size={13} className='text-info me-50' />\r\n            <h6 className='mb-0'>Visits</h6>\r\n          </div>\r\n        </div>\r\n        <Chart options={options} series={series} type='radar' height={300} />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default Sales\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Utils\r\nimport { kFormatter } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  CardBody,\r\n  CardText,\r\n  Progress,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nconst AvgSessions = props => {\r\n  // ** States\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-analytics/avg-sessions').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n      chart: {\r\n        sparkline: { enabled: true },\r\n        toolbar: { show: false }\r\n      },\r\n      grid: {\r\n        show: false,\r\n        padding: {\r\n          left: 0,\r\n          right: 0\r\n        }\r\n      },\r\n      states: {\r\n        hover: {\r\n          filter: 'none'\r\n        }\r\n      },\r\n      colors: ['#ebf0f7', '#ebf0f7', props.primary, '#ebf0f7', '#ebf0f7', '#ebf0f7'],\r\n      plotOptions: {\r\n        bar: {\r\n          columnWidth: '45%',\r\n          distributed: true,\r\n          borderRadius: [10]\r\n        }\r\n      },\r\n      tooltip: {\r\n        x: { show: false }\r\n      },\r\n      xaxis: {\r\n        type: 'numeric'\r\n      }\r\n    },\r\n    series = [\r\n      {\r\n        name: 'Sessions',\r\n        data: [75, 125, 225, 175, 125, 75, 25]\r\n      }\r\n    ]\r\n\r\n  return data !== null ? (\r\n    <Card>\r\n      <CardBody>\r\n        <Row className='pb-50'>\r\n          <Col\r\n            sm={{ size: 6, order: 1 }}\r\n            xs={{ order: 2 }}\r\n            className='d-flex justify-content-between flex-column mt-lg-0 mt-2'\r\n          >\r\n            <div className='session-info mb-1 mb-lg-0'>\r\n              <h2 className='fw-bold mb-25'>{kFormatter(data.sessions)}</h2>\r\n              <CardText className='fw-bold mb-2'>Avg Sessions</CardText>\r\n              <h5 className='font-medium-2'>\r\n                <span className='text-success me-50'>{data.growth}</span>\r\n                <span className='fw-normal'>vs last 7 days</span>\r\n              </h5>\r\n            </div>\r\n            <Button color='primary'>View Details</Button>\r\n          </Col>\r\n          <Col\r\n            sm={{ size: 6, order: 2 }}\r\n            xs={{ order: 1 }}\r\n            className='d-flex justify-content-between flex-column text-end'\r\n          >\r\n            <UncontrolledDropdown className='chart-dropdown'>\r\n              <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\r\n                Last 7 days\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                {data.last_days.map(item => (\r\n                  <DropdownItem className='w-100' key={item}>\r\n                    {item}\r\n                  </DropdownItem>\r\n                ))}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <Chart options={options} series={series} type='bar' height={200} />\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row className='pt-50'>\r\n          <Col className='mb-2' md='6' sm='12'>\r\n            <p className='mb-50'>Goal: ${data.goal}</p>\r\n            <Progress className='avg-session-progress mt-25' value='50' />\r\n          </Col>\r\n          <Col className='mb-2' md='6' sm='12'>\r\n            <p className='mb-50'>Users: {kFormatter(data.users)}</p>\r\n            <Progress className='avg-session-progress progress-bar-warning mt-25' value='60' />\r\n          </Col>\r\n          <Col md='6' sm='12'>\r\n            <p className='mb-50'>Retention: {data.retention}%</p>\r\n            <Progress className='avg-session-progress progress-bar-danger mt-25' value='70' />\r\n          </Col>\r\n          <Col md='6' sm='12'>\r\n            <p className='mb-50'>Duration: {data.duration}yr</p>\r\n            <Progress className='avg-session-progress progress-bar-success mt-25' value='80' />\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  ) : null\r\n}\r\nexport default AvgSessions\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nconst SupportTracker = props => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-analytics/support-tracker').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n      plotOptions: {\r\n        radialBar: {\r\n          size: 150,\r\n          offsetY: 20,\r\n          startAngle: -150,\r\n          endAngle: 150,\r\n          hollow: {\r\n            size: '65%'\r\n          },\r\n          track: {\r\n            background: '#fff',\r\n            strokeWidth: '100%'\r\n          },\r\n          dataLabels: {\r\n            name: {\r\n              offsetY: -5,\r\n              fontFamily: 'Montserrat',\r\n              fontSize: '1rem'\r\n            },\r\n            value: {\r\n              offsetY: 15,\r\n              fontFamily: 'Montserrat',\r\n              fontSize: '1.714rem'\r\n            }\r\n          }\r\n        }\r\n      },\r\n      colors: [props.danger],\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          shade: 'dark',\r\n          type: 'horizontal',\r\n          shadeIntensity: 0.5,\r\n          gradientToColors: [props.primary],\r\n          inverseColors: true,\r\n          opacityFrom: 1,\r\n          opacityTo: 1,\r\n          stops: [0, 100]\r\n        }\r\n      },\r\n      stroke: {\r\n        dashArray: 8\r\n      },\r\n      labels: ['Completed Tickets']\r\n    },\r\n    series = [83]\r\n\r\n  return data !== null ? (\r\n    <Card>\r\n      <CardHeader className='pb-0'>\r\n        <CardTitle tag='h4'>{data.title}</CardTitle>\r\n        <UncontrolledDropdown className='chart-dropdown'>\r\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\r\n            Last 7 days\r\n          </DropdownToggle>\r\n          <DropdownMenu end>\r\n            {data.last_days.map(item => (\r\n              <DropdownItem className='w-100' key={item}>\r\n                {item}\r\n              </DropdownItem>\r\n            ))}\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Row>\r\n          <Col sm='2' className='d-flex flex-column flex-wrap text-center'>\r\n            <h1 className='font-large-2 fw-bolder mt-2 mb-0'>{data.totalTicket}</h1>\r\n            <CardText>Tickets</CardText>\r\n          </Col>\r\n          <Col sm='10' className='d-flex justify-content-center'>\r\n            <Chart options={options} series={series} type='radialBar' height={270} id='support-tracker-card' />\r\n          </Col>\r\n        </Row>\r\n        <div className='d-flex justify-content-between mt-1'>\r\n          <div className='text-center'>\r\n            <CardText className='mb-50'>New Tickets</CardText>\r\n            <span className='font-large-1 fw-bold'>{data.newTicket}</span>\r\n          </div>\r\n          <div className='text-center'>\r\n            <CardText className='mb-50'>Open Tickets</CardText>\r\n            <span className='font-large-1 fw-bold'>{data.openTicket}</span>\r\n          </div>\r\n          <div className='text-center'>\r\n            <CardText className='mb-50'>Response Time</CardText>\r\n            <span className='font-large-1 fw-bold'>{data.responseTime}d</span>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  ) : null\r\n}\r\nexport default SupportTracker\r\n","// ** Third Party Components\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardTitle, CardText, CardBody, Row, Col } from 'reactstrap'\r\n\r\nconst Earnings = ({ success }) => {\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: { show: false },\r\n    comparedResult: [2, -3, 8],\r\n    labels: ['App', 'Service', 'Product'],\r\n    stroke: { width: 0 },\r\n    colors: ['#28c76f66', '#28c76f33', success],\r\n    grid: {\r\n      padding: {\r\n        right: -20,\r\n        bottom: -8,\r\n        left: -20\r\n      }\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        startAngle: -10,\r\n        donut: {\r\n          labels: {\r\n            show: true,\r\n            name: {\r\n              offsetY: 15\r\n            },\r\n            value: {\r\n              offsetY: -15,\r\n              formatter(val) {\r\n                return `${parseInt(val)} %`\r\n              }\r\n            },\r\n            total: {\r\n              show: true,\r\n              offsetY: 15,\r\n              label: 'App',\r\n              formatter() {\r\n                return '53%'\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 1325,\r\n        options: {\r\n          chart: {\r\n            height: 100\r\n          }\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 1200,\r\n        options: {\r\n          chart: {\r\n            height: 120\r\n          }\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 1065,\r\n        options: {\r\n          chart: {\r\n            height: 100\r\n          }\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 992,\r\n        options: {\r\n          chart: {\r\n            height: 120\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n\r\n  return (\r\n    <Card className='earnings-card'>\r\n      <CardBody>\r\n        <Row>\r\n          <Col xs='6'>\r\n            <CardTitle className='mb-1'>Earnings</CardTitle>\r\n            <div className='font-small-2'>This Month</div>\r\n            <h5 className='mb-1'>$4055.56</h5>\r\n            <CardText className='text-muted font-small-2'>\r\n              <span className='fw-bolder'>68.2%</span>\r\n              <span> more earnings than last month.</span>\r\n            </CardText>\r\n          </Col>\r\n          <Col xs='6'>\r\n            <Chart options={options} series={[53, 16, 31]} type='donut' height={120} />\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Earnings\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport Chart from 'react-apexcharts'\r\nimport { HelpCircle } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\r\n\r\nconst GoalOverview = props => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-analytics/goal-overview').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n      chart: {\r\n        sparkline: {\r\n          enabled: true\r\n        },\r\n        dropShadow: {\r\n          enabled: true,\r\n          blur: 3,\r\n          left: 1,\r\n          top: 1,\r\n          opacity: 0.1\r\n        }\r\n      },\r\n      colors: ['#51e5a8'],\r\n      plotOptions: {\r\n        radialBar: {\r\n          offsetY: 10,\r\n          startAngle: -150,\r\n          endAngle: 150,\r\n          hollow: {\r\n            size: '77%'\r\n          },\r\n          track: {\r\n            background: '#ebe9f1',\r\n            strokeWidth: '50%'\r\n          },\r\n          dataLabels: {\r\n            name: {\r\n              show: false\r\n            },\r\n            value: {\r\n              color: '#5e5873',\r\n              fontFamily: 'Montserrat',\r\n              fontSize: '2.86rem',\r\n              fontWeight: '600'\r\n            }\r\n          }\r\n        }\r\n      },\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          shade: 'dark',\r\n          type: 'horizontal',\r\n          shadeIntensity: 0.5,\r\n          gradientToColors: [props.success],\r\n          inverseColors: true,\r\n          opacityFrom: 1,\r\n          opacityTo: 1,\r\n          stops: [0, 100]\r\n        }\r\n      },\r\n      stroke: {\r\n        lineCap: 'round'\r\n      },\r\n      grid: {\r\n        padding: {\r\n          bottom: 30\r\n        }\r\n      }\r\n    },\r\n    series = [83]\r\n\r\n  return data !== null ? (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Goal Overview</CardTitle>\r\n        <HelpCircle size={18} className='text-muted cursor-pointer' />\r\n      </CardHeader>\r\n      <CardBody className='p-0'>\r\n        <Chart options={options} series={series} type='radialBar' height={245} />\r\n      </CardBody>\r\n      <Row className='border-top text-center mx-0'>\r\n        <Col xs='6' className='border-end py-1'>\r\n          <CardText className='text-muted mb-0'>Completed</CardText>\r\n          <h3 className='fw-bolder mb-0'>{data.completed}</h3>\r\n        </Col>\r\n        <Col xs='6' className='py-1'>\r\n          <CardText className='text-muted mb-0'>In Progress</CardText>\r\n          <h3 className='fw-bolder mb-0'>{data.inProgress}</h3>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  ) : null\r\n}\r\nexport default GoalOverview\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  CardTitle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst RevenueReport = props => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-analytics/revenue-report').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const revenueOptions = {\r\n      chart: {\r\n        stacked: true,\r\n        type: 'bar',\r\n        toolbar: { show: false }\r\n      },\r\n      grid: {\r\n        padding: {\r\n          top: -20,\r\n          bottom: -10\r\n        },\r\n        yaxis: {\r\n          lines: { show: false }\r\n        }\r\n      },\r\n      xaxis: {\r\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n        labels: {\r\n          style: {\r\n            colors: '#b9b9c3',\r\n            fontSize: '0.86rem'\r\n          }\r\n        },\r\n        axisTicks: {\r\n          show: false\r\n        },\r\n        axisBorder: {\r\n          show: false\r\n        }\r\n      },\r\n      legend: {\r\n        show: false\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      colors: [props.primary, props.warning],\r\n      plotOptions: {\r\n        bar: {\r\n          columnWidth: '17%',\r\n          borderRadius: [5]\r\n        },\r\n        distributed: true\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: '#b9b9c3',\r\n            fontSize: '0.86rem'\r\n          }\r\n        }\r\n      }\r\n    },\r\n    revenueSeries = [\r\n      {\r\n        name: 'Earning',\r\n        data: [95, 177, 284, 256, 105, 63, 168, 218, 72]\r\n      },\r\n      {\r\n        name: 'Expense',\r\n        data: [-145, -80, -60, -180, -100, -60, -85, -75, -100]\r\n      }\r\n    ]\r\n\r\n  const budgetSeries = [\r\n      {\r\n        data: [61, 48, 69, 52, 60, 40, 79, 60, 59, 43, 62]\r\n      },\r\n      {\r\n        data: [20, 10, 30, 15, 23, 0, 25, 15, 20, 5, 27]\r\n      }\r\n    ],\r\n    budgetOptions = {\r\n      chart: {\r\n        toolbar: { show: false },\r\n        zoom: { enabled: false },\r\n        type: 'line',\r\n        sparkline: { enabled: true }\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        dashArray: [0, 5],\r\n        width: [2]\r\n      },\r\n      colors: [props.primary, '#dcdae3'],\r\n      tooltip: {\r\n        enabled: false\r\n      }\r\n    }\r\n\r\n  return data !== null ? (\r\n    <Card className='card-revenue-budget'>\r\n      <Row className='mx-0'>\r\n        <Col className='revenue-report-wrapper' md='8' xs='12'>\r\n          <div className='d-sm-flex justify-content-between align-items-center mb-3'>\r\n            <CardTitle className='mb-50 mb-sm-0'>Revenue Report</CardTitle>\r\n            <div className='d-flex align-items-center'>\r\n              <div className='d-flex align-items-center me-2'>\r\n                <span className='bullet bullet-primary me-50 cursor-pointer'></span>\r\n                <span>Earning</span>\r\n              </div>\r\n              <div className='d-flex align-items-center'>\r\n                <span className='bullet bullet-warning me-50 cursor-pointer'></span>\r\n                <span>Expense</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Chart id='revenue-report-chart' type='bar' height='230' options={revenueOptions} series={revenueSeries} />\r\n        </Col>\r\n        <Col className='budget-wrapper' md='4' xs='12'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle className='budget-dropdown' outline color='primary' size='sm' caret>\r\n              2020\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              {data.years.map(item => (\r\n                <DropdownItem className='w-100' key={item}>\r\n                  {item}\r\n                </DropdownItem>\r\n              ))}\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n          <h2 className='mb-25'>${data.price}</h2>\r\n          <div className='d-flex justify-content-center'>\r\n            <span className='fw-bolder me-25'>Budget:</span>\r\n            <span>{data.budget}</span>\r\n          </div>\r\n          <Chart id='budget-chart' type='line' height='80' options={budgetOptions} series={budgetSeries} />\r\n          <Button color='primary'>Increase Budget</Button>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  ) : null\r\n}\r\n\r\nexport default RevenueReport\r\n"],"sourceRoot":""}