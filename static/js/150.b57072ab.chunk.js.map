{"version":3,"sources":["views/extensions/react-player/MediaPlayerVideo.js","views/extensions/react-player/MediaPlayerAudio.js","views/extensions/react-player/MediaPlayerControlled.js","views/extensions/react-player/index.js","@core/components/extensions-header/index.js"],"names":["MediaPlayerVideo","tag","width","controls","className","url","pad","string","slice","format","seconds","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","MediaPlayerAudio","audioRef","useRef","urlLink","useState","setUrl","played","setPlayed","loaded","setLoaded","muted","setMuted","volume","setVolume","duration","setDuration","seeking","setSeeking","playing","setPlaying","useEffect","Prism","highlightAll","load","Duration","dateTime","Math","round","preDuration","preElapsed","preRemaining","xs","ref","height","onPlay","onPause","onSeek","e","console","log","onProgress","state","onDuration","borderless","variant","outline","onClick","type","min","max","step","value","onMouseDown","onChange","parseFloat","target","onMouseUp","current","seekTo","id","checked","toFixed","props","MediaPlayerControlledVideo","videoRef","loop","setLoop","setControls","playbackRate","setPlaybackRate","handlePlaybackRate","onEnded","config","youtube","embedOptions","color","screenfull","request","findDOMNode","active","ReactPlayer","title","subTitle","link","sm","MediaPlayerControlled","ExtensionsHeader","href","rel"],"mappings":"wMAwBeA,EAlBU,WACvB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAWC,IAAI,KAAf,qBAEF,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,MAAM,OACNC,UAAU,EACVC,UAAU,qBACVC,IAAI,iD,0BCPRC,EAAM,SAAAC,GACV,MAAO,WAAIA,GAASC,OAAO,IAEvBC,EAAS,SAAAC,GACb,IAAMC,EAAO,IAAIC,KAAe,IAAVF,GAChBG,EAAKF,EAAKG,cACVC,EAAKJ,EAAKK,gBACVC,EAAKX,EAAIK,EAAKO,iBACpB,OAAIL,EACI,GAAN,OAAUA,EAAV,YAAgBP,EAAIS,GAApB,YAA2BE,GAEvB,GAAN,OAAUF,EAAV,YAAgBE,IA+KHE,EA5KU,WAEvB,IAAMC,EAAWC,iBAAO,MAGlBC,EAAU,iDAGhB,EAAsBC,mBAASD,GAA/B,mBAAOjB,EAAP,KAAYmB,EAAZ,KACA,EAA4BD,mBAAS,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAA4BH,mBAAS,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAA0BL,oBAAS,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAA4BP,mBAAS,KAArC,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAAgCT,mBAAS,GAAzC,mBAAOU,EAAP,KAAiBC,EAAjB,KACA,EAA8BX,mBAAS,MAAvC,mBAAOY,EAAP,KAAgBC,EAAhB,KACA,EAA8Bb,oBAAS,GAAvC,mBAAOc,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,IAAMC,kBAgCRF,qBAAU,WACI,OAARlC,GA9BO,SAAAA,GACXmB,EAAOnB,GACPqB,EAAU,GACVE,EAAU,GA4BRc,CAAKpB,MAKT,IAAMqB,EAAW,SAAC,GAA4B,IAA1BvC,EAAyB,EAAzBA,UAAWM,EAAc,EAAdA,QAC7B,OACE,sBAAMkC,SAAQ,WAAMC,KAAKC,MAAMpC,GAAjB,KAA8BN,UAAWA,EAAvD,SACGK,EAAOC,MAIRqC,EAAc,cAACJ,EAAD,CAAUjC,QAASuB,IACjCe,EAAa,cAACL,EAAD,CAAUjC,QAASuB,EAAWR,IAC3CwB,EAAe,cAACN,EAAD,CAAUjC,QAASuB,GAAY,EAAIR,KAExD,OACE,eAAC,IAAD,CAAMrB,UAAU,kBAAhB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAWH,IAAI,KAAf,qBAEF,cAAC,IAAD,UACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAKiD,GAAI,GAAT,SACE,cAAC,IAAD,CACEC,IAAK/B,EACLf,IAAKA,EACLD,UAAU,qBACVF,MAAM,QACNkD,OAAO,QACPf,QAASA,EACTN,OAAQA,EACRF,MAAOA,EACPwB,OApDO,kBAAMf,GAAW,IAqDxBgB,QApDQ,kBAAMhB,GAAW,IAqDzBiB,OAAQ,SAAAC,GAAC,OAAIC,QAAQC,IAAI,SAAUF,IACnCG,WA7CW,SAAAC,GAChBzB,IACHT,EAAUkC,EAAMnC,QAChBG,EAAUgC,EAAMjC,UA2CRkC,WAxCW,SAAA5B,GAAQ,OAAIC,EAAYD,QA2CvC,cAAC,IAAD,CAAKiB,GAAI,GAAT,SACE,cAAC,KAAD,CAAOY,YAAU,EAAC1D,UAAU,OAA5B,SACE,kCACE,+BACE,oBAAIA,UAAU,WAAd,sBACA,+BACE,cAAC,IAAD,CAAQ2D,QAAQ,UAAUC,SAAO,EAACC,QAvEjC,WACjB3B,GAAW,GACXd,EAAO,OAqEgEpB,UAAU,cAAjE,kBAGA,cAAC,IAAD,CAAQ2D,QAAQ,UAAUC,SAAO,EAACC,QA3E5B,kBAAM3B,GAAYD,IA2EoCjC,UAAU,QAAtE,SACGiC,EAAU,QAAU,eAI3B,+BACE,oBAAIjC,UAAU,WAAd,kBACA,6BACE,uBACE8D,KAAK,QACLC,IAAK,EACLC,IAAK,QACLC,KAAK,MACLC,MAAO7C,EACP8C,YAhFQ,kBAAMnC,GAAW,IAiFzBoC,SAhFK,SAAAhB,GACvB9B,EAAU+C,WAAWjB,EAAEkB,OAAOJ,SAgFZK,UA9EM,SAAAnB,GACxBpB,GAAW,GACXhB,EAASwD,QAAQC,OAAOJ,WAAWjB,EAAEkB,OAAOJ,gBAgFhC,+BACE,oBAAIlE,UAAU,WAAd,oBACA,6BACE,uBAAO8D,KAAK,QAAQC,IAAK,EAAGC,IAAK,EAAGC,KAAK,MAAMC,MAAOvC,EAAQyC,SA7FrD,SAAAhB,GAAC,OAAIxB,EAAUyC,WAAWjB,EAAEkB,OAAOJ,gBAgGhD,+BACE,oBAAIlE,UAAU,WAAd,mBACA,6BACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAO8D,KAAK,WAAWY,GAAG,aAAaC,QAASlD,EAAO2C,SAnGjD,kBAAM1C,GAAUD,aAuG5B,+BACE,oBAAIzB,UAAU,WAAd,oBACA,6BACE,cAAC,KAAD,CAAUkE,MAAO7C,EAAQ2C,IAAK,SAGlC,+BACE,oBAAIhE,UAAU,WAAd,oBACA,6BACE,cAAC,KAAD,CAAUkE,MAAO3C,EAAQyC,IAAK,gBAMxC,cAAC,IAAD,CAAKlB,GAAI,GAAT,SACE,qBAAK9C,UAAU,cAAf,SACE,sBAAMA,UAAU,cAAhB,uCAEDiC,EAFC,wBAGFN,EAAOiD,QAAQ,GAHb,wBAIFvD,EAAOuD,QAAQ,GAJb,wBAKFrD,EAAOqD,QAAQ,GALb,0BAMAvE,EAAOsC,EAAYkC,MAAMvE,SANzB,yBAODD,EAAOuC,EAAWiC,MAAMvE,SAPvB,2BAQCD,EAAOwC,EAAagC,MAAMvE,SAR3B,wB,2BCpKRJ,EAAM,SAAAC,GACV,MAAO,WAAIA,GAASC,OAAO,IAEvBC,EAAS,SAAAC,GACb,IAAMC,EAAO,IAAIC,KAAe,IAAVF,GAChBG,EAAKF,EAAKG,cACVC,EAAKJ,EAAKK,gBACVC,EAAKX,EAAIK,EAAKO,iBACpB,OAAIL,EACI,GAAN,OAAUA,EAAV,YAAgBP,EAAIS,GAApB,YAA2BE,GAEvB,GAAN,OAAUF,EAAV,YAAgBE,IAuPHiE,EApPoB,WAEjC,IAAMC,EAAW9D,iBAAO,MAGlBC,EAAU,yCAGhB,EAAsBC,mBAASD,GAA/B,mBAAOjB,EAAP,KAAYmB,EAAZ,KACA,EAA4BD,mBAAS,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAA4BH,mBAAS,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAAwBL,oBAAS,GAAjC,mBAAO6D,EAAP,KAAaC,EAAb,KACA,EAA0B9D,oBAAS,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAA4BP,mBAAS,KAArC,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAAgCT,mBAAS,GAAzC,mBAAOU,EAAP,KAAiBC,EAAjB,KACA,EAA8BX,mBAAS,MAAvC,mBAAOY,EAAP,KAAgBC,EAAhB,KACA,EAA8Bb,oBAAS,GAAvC,mBAAOc,EAAP,KAAgBC,EAAhB,KACA,EAAgCf,oBAAS,GAAzC,mBAAOpB,EAAP,KAAiBmF,EAAjB,KACA,EAAwC/D,mBAAS,GAAjD,mBAAOgE,EAAP,KAAqBC,GAArB,KAEAjD,qBAAU,WACRC,IAAMC,kBAiBRF,qBAAU,WACI,OAARlC,GAfO,SAAAA,GACXmB,EAAOnB,GACPqB,EAAU,GACVE,EAAU,GAaRc,CAAKpB,MAGT,IAGMmE,GAAqB,SAAAjC,GAAC,OAAIgC,GAAgBf,WAAWjB,EAAEkB,OAAOJ,SAwB9D3B,GAAW,SAAC,GAA4B,IAA1BvC,EAAyB,EAAzBA,UAAWM,EAAc,EAAdA,QAC7B,OACE,sBAAMkC,SAAQ,WAAMC,KAAKC,MAAMpC,GAAjB,KAA8BN,UAAWA,EAAvD,SACGK,EAAOC,MAIRqC,GAAc,cAACJ,GAAD,CAAUjC,QAASuB,IACjCe,GAAa,cAACL,GAAD,CAAUjC,QAASuB,EAAWR,IAC3CwB,GAAe,cAACN,GAAD,CAAUjC,QAASuB,GAAY,EAAIR,KAExD,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAWxB,IAAI,KAAf,gCAEF,cAAC,IAAD,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAKiD,GAAI,GAAT,SACE,cAAC,IAAD,CACEC,IAAKgC,EACL9E,IAAKA,EACLD,UAAU,qBACVF,MAAM,OACNmC,QAASA,EACTlC,SAAUA,EACViF,KAAMA,EACNG,aAAcA,EACdxD,OAAQA,EACRF,MAAOA,EACPwB,OArDO,kBAAMf,GAAW,IAsDxBgB,QArDQ,kBAAMhB,GAAW,IAsDzBoD,QAvCQ,kBAAMpD,EAAW8C,IAwCzBzB,WA9CW,SAAAC,GAChBzB,IACHT,EAAUkC,EAAMnC,QAChBG,EAAUgC,EAAMjC,UA4CRkC,WAxCW,SAAA5B,GAAQ,OAAIC,EAAYD,IAyCnC0D,OAAQ,CACNC,QAAS,CACPC,aAAc,CACZ,qBAAqB,aAQnC,cAAC,KAAD,CAAO/B,YAAU,EAAjB,SACE,kCACE,+BACE,oBAAI1D,UAAU,WAAd,sBACA,+BACE,cAAC,IAAD,CAAQ0F,MAAM,UAAU9B,SAAO,EAACC,QA3FzB,WACjB3B,GAAW,GACXd,EAAO,OAyFwDpB,UAAU,cAA/D,kBAGA,cAAC,IAAD,CAAQ0F,MAAM,UAAU9B,SAAO,EAACC,QA/FpB,kBAAM3B,GAAYD,IA+F4BjC,UAAU,cAApE,SACGiC,EAAU,QAAU,SAEvB,cAAC,IAAD,CAAQyD,MAAM,UAAU9B,SAAO,EAACC,QA9DnB,WACvB8B,IAAWC,QAAQC,sBAAYd,EAASP,WA6D6BxE,UAAU,QAArE,8BAKJ,+BACE,oBAAIA,UAAU,WAAd,mBACA,+BACE,cAAC,IAAD,CACE0F,MAAM,UACN9B,SAAO,EACPC,QAASwB,GACTnB,MAAO,EACPlE,UAAU,cACV8F,OAAyB,IAAjBX,EANV,gBAUA,cAAC,IAAD,CACEO,MAAM,UACN9B,SAAO,EACPC,QAASwB,GACTnB,MAAO,IACPlE,UAAU,cACV8F,OAAyB,MAAjBX,EANV,kBAUA,cAAC,IAAD,CAAQO,MAAM,UAAU9B,SAAO,EAACC,QAASwB,GAAoBnB,MAAO,EAAG4B,OAAyB,IAAjBX,EAA/E,sBAKJ,+BACE,oBAAInF,UAAU,WAAd,kBACA,6BACE,uBACE8D,KAAK,QACLC,IAAK,EACLC,IAAK,QACLC,KAAK,MACLC,MAAO7C,EACP8C,YAxHc,kBAAMnC,GAAW,IAyH/BoC,SAxHW,SAAAhB,GACvB9B,EAAU+C,WAAWjB,EAAEkB,OAAOJ,SAwHlBK,UAtHY,SAAAnB,GACxBpB,GAAW,GACX+C,EAASP,QAAQC,OAAOJ,WAAWjB,EAAEkB,OAAOJ,gBAwHtC,+BACE,oBAAIlE,UAAU,WAAd,oBACA,6BACE,uBAAO8D,KAAK,QAAQC,IAAK,EAAGC,IAAK,EAAGC,KAAK,MAAMC,MAAOvC,EAAQyC,SAtI/C,SAAAhB,GAAC,OAAIxB,EAAUyC,WAAWjB,EAAEkB,OAAOJ,gBAyItD,+BACE,oBAAIlE,UAAU,WAAd,sBACA,6BACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAO8D,KAAK,WAAWY,GAAG,gBAAgBC,QAAS5E,EAAUqE,SAvJ9C,WAC3Bc,GAAanF,GACbqB,EAAO,gBAyJD,+BACE,oBAAIpB,UAAU,WAAd,mBACA,6BACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAO8D,KAAK,WAAWY,GAAG,aAAaC,QAASlD,EAAO2C,SApJ3C,kBAAM1C,GAAUD,aAwJlC,+BACE,oBAAIzB,UAAU,WAAd,kBACA,6BACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAO8D,KAAK,WAAWY,GAAG,YAAYC,QAASK,EAAMZ,SA9J1C,kBAAMa,GAASD,aAkKhC,+BACE,oBAAIhF,UAAU,WAAd,oBACA,6BACE,cAAC,KAAD,CAAUkE,MAAO7C,EAAQ2C,IAAK,SAGlC,+BACE,oBAAIhE,UAAU,WAAd,oBACA,6BACE,cAAC,KAAD,CAAUkE,MAAO3C,EAAQyC,IAAK,cAMtC,cAAC,IAAD,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAKlB,GAAI,GAAT,SACE,qBAAK9C,UAAU,cAAf,SACE,sBAAMA,UAAU,cAAhB,uCAEDiC,EAFC,wBAGFN,EAAOiD,QAAQ,GAHb,wBAIFvD,EAAOuD,QAAQ,GAJb,wBAKFrD,EAAOqD,QAAQ,GALb,0BAMAvE,EAAOsC,GAAYkC,MAAMvE,SANzB,yBAODD,EAAOuC,GAAWiC,MAAMvE,SAPvB,2BAQCD,EAAOwC,GAAagC,MAAMvE,SAR3B,uB,SCrNCyF,UAvBK,WAClB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEC,MAAM,eACNC,SAAS,qBACTC,KAAK,6CAEP,eAAC,KAAD,WACE,cAAC,IAAD,CAAKC,GAAG,KAAR,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAKA,GAAG,KAAR,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAKD,GAAG,KAAR,SACE,cAAC,EAAD,c,iCC9BV,mBAwBeE,IAlBU,SAAAxB,GACvB,OACE,cAAC,KAAD,CAAK7E,UAAU,OAAf,SACE,eAAC,IAAD,CAAKmG,GAAG,KAAKnG,UAAU,QAAvB,UACE,mBAAGA,UAAU,qCAAqC,YAAU,kBAA5D,SACG6E,EAAMmB,QAERnB,EAAMqB,KACL,mBAAGI,KAAMzB,EAAMqB,KAAM5B,OAAO,SAASiC,IAAI,sBAAzC,SACG1B,EAAMoB,WAGT,mBAAGjG,UAAU,eAAb,SAA6B6E,EAAMoB","file":"static/js/150.b57072ab.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport ReactPlayer from 'react-player'\r\n\r\nconst MediaPlayerVideo = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Video</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ReactPlayer\r\n          width='100%'\r\n          controls={true}\r\n          className='react-player-video'\r\n          url='http://youtube.com/watch?v=FCPdIvXo2rU'\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MediaPlayerVideo\r\n","// ** React Imports\r\nimport { useState, useEffect, useRef } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardTitle, CardHeader, CardBody, Row, Col, Table, Button, Progress, Input } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\nimport ReactPlayer from 'react-player'\r\n\r\nconst pad = string => {\r\n  return `0${string}`.slice(-2)\r\n}\r\nconst format = seconds => {\r\n  const date = new Date(seconds * 1000)\r\n  const hh = date.getUTCHours()\r\n  const mm = date.getUTCMinutes()\r\n  const ss = pad(date.getUTCSeconds())\r\n  if (hh) {\r\n    return `${hh}:${pad(mm)}:${ss}`\r\n  }\r\n  return `${mm}:${ss}`\r\n}\r\n\r\nconst MediaPlayerAudio = () => {\r\n  // ** Ref\r\n  const audioRef = useRef(null)\r\n\r\n  // ** Vars\r\n  const urlLink = 'https://soundcloud.com/2ghost/we-will-rock-you'\r\n\r\n  // ** States\r\n  const [url, setUrl] = useState(urlLink)\r\n  const [played, setPlayed] = useState(0)\r\n  const [loaded, setLoaded] = useState(0)\r\n  const [muted, setMuted] = useState(false)\r\n  const [volume, setVolume] = useState(0.75)\r\n  const [duration, setDuration] = useState(0)\r\n  const [seeking, setSeeking] = useState(null)\r\n  const [playing, setPlaying] = useState(false)\r\n\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  })\r\n\r\n  const load = url => {\r\n    setUrl(url)\r\n    setPlayed(0)\r\n    setLoaded(0)\r\n  }\r\n  const handlePlayPause = () => setPlaying(!playing)\r\n  const handleStop = () => {\r\n    setPlaying(false)\r\n    setUrl(null)\r\n  }\r\n  const handleVolumeChange = e => setVolume(parseFloat(e.target.value))\r\n  const handleToggleMuted = () => setMuted(!muted)\r\n  const handlePlay = () => setPlaying(true)\r\n  const handlePause = () => setPlaying(false)\r\n  const handleSeekMouseDown = () => setSeeking(true)\r\n  const handleSeekChange = e => {\r\n    setPlayed(parseFloat(e.target.value))\r\n  }\r\n  const handleSeekMouseUp = e => {\r\n    setSeeking(false)\r\n    audioRef.current.seekTo(parseFloat(e.target.value))\r\n  }\r\n  const handleProgress = state => {\r\n    if (!seeking) {\r\n      setPlayed(state.played)\r\n      setLoaded(state.loaded)\r\n    }\r\n  }\r\n  const handleDuration = duration => setDuration(duration)\r\n  useEffect(() => {\r\n    if (url === null) {\r\n      load(urlLink)\r\n    }\r\n  })\r\n\r\n  // for duration, elapsed and remaining time\r\n  const Duration = ({ className, seconds }) => {\r\n    return (\r\n      <time dateTime={`P${Math.round(seconds)}S`} className={className}>\r\n        {format(seconds)}\r\n      </time>\r\n    )\r\n  }\r\n  const preDuration = <Duration seconds={duration}></Duration>\r\n  const preElapsed = <Duration seconds={duration * played}></Duration>\r\n  const preRemaining = <Duration seconds={duration * (1 - played)}></Duration>\r\n\r\n  return (\r\n    <Card className='overflow-hidden'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Audio</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <ReactPlayer\r\n              ref={audioRef}\r\n              url={url}\r\n              className='react-player-audio'\r\n              width='500px'\r\n              height='290px'\r\n              playing={playing}\r\n              volume={volume}\r\n              muted={muted}\r\n              onPlay={handlePlay}\r\n              onPause={handlePause}\r\n              onSeek={e => console.log('onSeek', e)}\r\n              onProgress={handleProgress}\r\n              onDuration={handleDuration}\r\n            />\r\n          </Col>\r\n          <Col xs={12}>\r\n            <Table borderless className='mt-2'>\r\n              <tbody>\r\n                <tr>\r\n                  <td className='text-end'>Controls</td>\r\n                  <td>\r\n                    <Button variant='primary' outline onClick={handleStop} className='my-25 me-50'>\r\n                      Stop\r\n                    </Button>\r\n                    <Button variant='primary' outline onClick={handlePlayPause} className='my-25'>\r\n                      {playing ? 'Pause' : 'Play'}\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='text-end'>Seek</td>\r\n                  <td>\r\n                    <input\r\n                      type='range'\r\n                      min={0}\r\n                      max={0.999999}\r\n                      step='any'\r\n                      value={played}\r\n                      onMouseDown={handleSeekMouseDown}\r\n                      onChange={handleSeekChange}\r\n                      onMouseUp={handleSeekMouseUp}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='text-end'>Volume</td>\r\n                  <td>\r\n                    <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='text-end'>Muted</td>\r\n                  <td>\r\n                    <div className='form-check'>\r\n                      <Input type='checkbox' id='audioMuted' checked={muted} onChange={handleToggleMuted} />\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='text-end'>Played</td>\r\n                  <td>\r\n                    <Progress value={played} max={1} />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='text-end'>Loaded</td>\r\n                  <td>\r\n                    <Progress value={loaded} max={1} />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <pre className='language-js'>\r\n              <code className='language-js'>\r\n                {`state={\r\n  playing: ${playing},\r\n  volume: ${volume.toFixed(2)},\r\n  played: ${played.toFixed(2)},\r\n  loaded: ${loaded.toFixed(2)},\r\n  duration: ${format(preDuration.props.seconds)},\r\n  elapsed: ${format(preElapsed.props.seconds)},\r\n  remaining: ${format(preRemaining.props.seconds)}\r\n}\r\n`}\r\n              </code>\r\n            </pre>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MediaPlayerAudio\r\n","// ** React Imports\r\nimport { findDOMNode } from 'react-dom'\r\nimport { useState, useEffect, useRef } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardTitle, CardHeader, CardBody, Row, Col, Table, Button, Progress, Input } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\nimport screenfull from 'screenfull'\r\nimport ReactPlayer from 'react-player'\r\n\r\nconst pad = string => {\r\n  return `0${string}`.slice(-2)\r\n}\r\nconst format = seconds => {\r\n  const date = new Date(seconds * 1000)\r\n  const hh = date.getUTCHours()\r\n  const mm = date.getUTCMinutes()\r\n  const ss = pad(date.getUTCSeconds())\r\n  if (hh) {\r\n    return `${hh}:${pad(mm)}:${ss}`\r\n  }\r\n  return `${mm}:${ss}`\r\n}\r\n\r\nconst MediaPlayerControlledVideo = () => {\r\n  // ** Ref\r\n  const videoRef = useRef(null)\r\n\r\n  // ** Vars\r\n  const urlLink = 'http://youtube.com/watch?v=FCPdIvXo2rU'\r\n\r\n  // ** States\r\n  const [url, setUrl] = useState(urlLink)\r\n  const [played, setPlayed] = useState(0)\r\n  const [loaded, setLoaded] = useState(0)\r\n  const [loop, setLoop] = useState(false)\r\n  const [muted, setMuted] = useState(false)\r\n  const [volume, setVolume] = useState(0.75)\r\n  const [duration, setDuration] = useState(0)\r\n  const [seeking, setSeeking] = useState(null)\r\n  const [playing, setPlaying] = useState(false)\r\n  const [controls, setControls] = useState(false)\r\n  const [playbackRate, setPlaybackRate] = useState(1.0)\r\n\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  })\r\n\r\n  const load = url => {\r\n    setUrl(url)\r\n    setPlayed(0)\r\n    setLoaded(0)\r\n  }\r\n  const handlePlayPause = () => setPlaying(!playing)\r\n  const handleStop = () => {\r\n    setPlaying(false)\r\n    setUrl(null)\r\n  }\r\n  const handleToggleControls = () => {\r\n    setControls(!controls)\r\n    setUrl(null)\r\n  }\r\n  useEffect(() => {\r\n    if (url === null) {\r\n      load(urlLink)\r\n    }\r\n  })\r\n  const handleToggleLoop = () => setLoop(!loop)\r\n  const handleVolumeChange = e => setVolume(parseFloat(e.target.value))\r\n  const handleToggleMuted = () => setMuted(!muted)\r\n  const handlePlaybackRate = e => setPlaybackRate(parseFloat(e.target.value))\r\n  const handlePlay = () => setPlaying(true)\r\n  const handlePause = () => setPlaying(false)\r\n  const handleSeekMouseDown = () => setSeeking(true)\r\n  const handleSeekChange = e => {\r\n    setPlayed(parseFloat(e.target.value))\r\n  }\r\n  const handleSeekMouseUp = e => {\r\n    setSeeking(false)\r\n    videoRef.current.seekTo(parseFloat(e.target.value))\r\n  }\r\n  const handleProgress = state => {\r\n    if (!seeking) {\r\n      setPlayed(state.played)\r\n      setLoaded(state.loaded)\r\n    }\r\n  }\r\n  const handleEnded = () => setPlaying(loop)\r\n  const handleDuration = duration => setDuration(duration)\r\n  const handleFullscreen = () => {\r\n    screenfull.request(findDOMNode(videoRef.current))\r\n  }\r\n\r\n  // for duration, elapsed and remaining time\r\n  const Duration = ({ className, seconds }) => {\r\n    return (\r\n      <time dateTime={`P${Math.round(seconds)}S`} className={className}>\r\n        {format(seconds)}\r\n      </time>\r\n    )\r\n  }\r\n  const preDuration = <Duration seconds={duration}></Duration>\r\n  const preElapsed = <Duration seconds={duration * played}></Duration>\r\n  const preRemaining = <Duration seconds={duration * (1 - played)}></Duration>\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Controlled Video</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <ReactPlayer\r\n              ref={videoRef}\r\n              url={url}\r\n              className='react-player-video'\r\n              width='100%'\r\n              playing={playing}\r\n              controls={controls}\r\n              loop={loop}\r\n              playbackRate={playbackRate}\r\n              volume={volume}\r\n              muted={muted}\r\n              onPlay={handlePlay}\r\n              onPause={handlePause}\r\n              onEnded={handleEnded}\r\n              onProgress={handleProgress}\r\n              onDuration={handleDuration}\r\n              config={{\r\n                youtube: {\r\n                  embedOptions: {\r\n                    'allow-same-origin': true\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n      <Table borderless>\r\n        <tbody>\r\n          <tr>\r\n            <td className='text-end'>Controls</td>\r\n            <td>\r\n              <Button color='primary' outline onClick={handleStop} className='my-25 me-50'>\r\n                Stop\r\n              </Button>\r\n              <Button color='primary' outline onClick={handlePlayPause} className='my-25 me-50'>\r\n                {playing ? 'Pause' : 'Play'}\r\n              </Button>\r\n              <Button color='primary' outline onClick={handleFullscreen} className='my-25'>\r\n                Fullscreen\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className='text-end'>Speed</td>\r\n            <td>\r\n              <Button\r\n                color='primary'\r\n                outline\r\n                onClick={handlePlaybackRate}\r\n                value={1}\r\n                className='my-25 me-50'\r\n                active={playbackRate === 1}\r\n              >\r\n                1x\r\n              </Button>\r\n              <Button\r\n                color='primary'\r\n                outline\r\n                onClick={handlePlaybackRate}\r\n                value={1.5}\r\n                className='my-25 me-50'\r\n                active={playbackRate === 1.5}\r\n              >\r\n                1.5x\r\n              </Button>\r\n              <Button color='primary' outline onClick={handlePlaybackRate} value={2} active={playbackRate === 2}>\r\n                2x\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className='text-end'>Seek</td>\r\n            <td>\r\n              <input\r\n                type='range'\r\n                min={0}\r\n                max={0.999999}\r\n                step='any'\r\n                value={played}\r\n                onMouseDown={handleSeekMouseDown}\r\n                onChange={handleSeekChange}\r\n                onMouseUp={handleSeekMouseUp}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className='text-end'>Volume</td>\r\n            <td>\r\n              <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className='text-end'>Controls</td>\r\n            <td>\r\n              <div className='form-check'>\r\n                <Input type='checkbox' id='videoControls' checked={controls} onChange={handleToggleControls} />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className='text-end'>Muted</td>\r\n            <td>\r\n              <div className='form-check'>\r\n                <Input type='checkbox' id='videoMuted' checked={muted} onChange={handleToggleMuted} />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className='text-end'>Loop</td>\r\n            <td>\r\n              <div className='form-check'>\r\n                <Input type='checkbox' id='videoLoop' checked={loop} onChange={handleToggleLoop} />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className='text-end'>Played</td>\r\n            <td>\r\n              <Progress value={played} max={1} />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className='text-end'>Loaded</td>\r\n            <td>\r\n              <Progress value={loaded} max={1} />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      <CardBody>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <pre className='language-js'>\r\n              <code className='language-js'>\r\n                {`state={\r\n  playing: ${playing},\r\n  volume: ${volume.toFixed(2)},\r\n  played: ${played.toFixed(2)},\r\n  loaded: ${loaded.toFixed(2)},\r\n  duration: ${format(preDuration.props.seconds)},\r\n  elapsed: ${format(preElapsed.props.seconds)},\r\n  remaining: ${format(preRemaining.props.seconds)}\r\n}\r\n`}\r\n              </code>\r\n            </pre>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MediaPlayerControlledVideo\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Demo Components\r\nimport MediaPlayerVideo from './MediaPlayerVideo'\r\nimport MediaPlayerAudio from './MediaPlayerAudio'\r\nimport MediaPlayerControlled from './MediaPlayerControlled'\r\n\r\n// ** Custom Components\r\nimport ExtensionsHeader from '@components/extensions-header'\r\n\r\nconst ReactPlayer = () => {\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='React Player'\r\n        subTitle='React Media Player'\r\n        link='https://github.com/CookPete/react-player'\r\n      />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <MediaPlayerVideo />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <MediaPlayerControlled />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <MediaPlayerAudio />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ReactPlayer\r\n","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row className='mb-2'>\r\n      <Col sm='12' className='ms-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  link: Proptypes.string,\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}