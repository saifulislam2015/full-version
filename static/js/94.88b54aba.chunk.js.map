{"version":3,"sources":["views/pages/authentication/RegisterCover.js","@core/components/input-password-toggle/index.js"],"names":["RegisterCover","illustration","useSkin","skin","source","require","default","className","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","sm","src","alt","xs","md","tag","onSubmit","for","type","placeholder","autoFocus","href","color","block","size","InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","invalid","rest","useState","inputVisibility","setInputVisibility","classnames","renderIcon","defaultProps"],"mappings":"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","file":"static/js/94.88b54aba.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\n\r\n// ** Icons Imports\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardTitle, CardText, Form, Label, Input, Button } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nconst RegisterCover = () => {\r\n  // ** Hooks\r\n  const { skin } = useSkin()\r\n\r\n  const illustration = skin === 'dark' ? 'register-v2-dark.svg' : 'register-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  return (\r\n    <div className='auth-wrapper auth-cover'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n            <defs>\r\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                <stop stopColor='#000000' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n              </linearGradient>\r\n            </defs>\r\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                  <path\r\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                    id='Path'\r\n                    className='text-primary'\r\n                    style={{ fill: 'currentColor' }}\r\n                  ></path>\r\n                  <path\r\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                    id='Path'\r\n                    fill='url(#linearGradient-1)'\r\n                    opacity='0.2'\r\n                  ></path>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.049999997'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-2'\r\n                    fill='#000000'\r\n                    opacity='0.099999994'\r\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                  ></polygon>\r\n                  <polygon\r\n                    id='Path-3'\r\n                    fill='url(#linearGradient-2)'\r\n                    opacity='0.099999994'\r\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                  ></polygon>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <h2 className='brand-text text-primary ms-1'>Vuexy</h2>\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login Cover' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' xs='12' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='fw-bold mb-1'>\r\n              Adventure starts here ğŸš€\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Make your app management easy and fun!</CardText>\r\n            <Form className='auth-register-form mt-2' onSubmit={e => e.preventDefault()}>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-username'>\r\n                  Username\r\n                </Label>\r\n                <Input type='text' id='register-username' placeholder='johndoe' autoFocus />\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-email'>\r\n                  Email\r\n                </Label>\r\n                <Input type='email' id='register-email' placeholder='john@example.com' />\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-password'>\r\n                  Password\r\n                </Label>\r\n                <InputPasswordToggle className='input-group-merge' id='register-password' />\r\n              </div>\r\n              <div className='form-check mb-1'>\r\n                <Input type='checkbox' id='terms' />\r\n                <Label className='form-check-label' for='terms'>\r\n                  I agree to\r\n                  <a className='ms-25' href='/' onClick={e => e.preventDefault()}>\r\n                    privacy policy & terms\r\n                  </a>\r\n                </Label>\r\n              </div>\r\n              <Button color='primary' block>\r\n                Sign up\r\n              </Button>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='me-25'>Already have an account?</span>\r\n              <Link to='/pages/login-cover'>\r\n                <span>Sign in instead</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              <Button color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button>\r\n              <Button color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button>\r\n              <Button color='google'>\r\n                <Mail size={14} />\r\n              </Button>\r\n              <Button className='me-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterCover\r\n","// ** React Imports\r\nimport { Fragment, useState, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    invalid,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? (\r\n        <Label className='form-label' for={htmlFor}>\r\n          {label}\r\n        </Label>\r\n      ) : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className,\r\n          'is-invalid': invalid\r\n        })}\r\n      >\r\n        <Input\r\n          ref={ref}\r\n          invalid={invalid}\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : 'Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          {renderIcon()}\r\n        </InputGroupText>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n})\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  invalid: PropTypes.bool,\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n"],"sourceRoot":""}