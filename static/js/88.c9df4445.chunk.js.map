{"version":3,"sources":["views/forms/form-elements/file-uploader/FileUploaderSingle.js","views/forms/form-elements/file-uploader/FileUploaderMultiple.js","views/forms/form-elements/file-uploader/FileUploaderRestrictions.js","views/forms/form-elements/file-uploader/index.js","@core/components/extensions-header/index.js"],"names":["FileUploaderSingle","useState","files","setFiles","useDropzone","multiple","onDrop","acceptedFiles","map","file","Object","assign","getRootProps","getInputProps","renderFilePreview","type","startsWith","className","alt","name","src","URL","createObjectURL","height","width","size","fileList","index","Math","round","toFixed","color","outline","onClick","filtered","filter","i","handleRemoveFile","tag","href","e","preventDefault","length","FileUploaderMultiple","ErrorToast","icon","role","FileUploaderRestrictions","accept","rejectedFiles","toast","error","hideProgressBar","Uploader","title","link","subTitle","sm","ExtensionsHeader","props","target","rel"],"mappings":"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","file":"static/js/88.c9df4445.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Third Party Imports\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { FileText, X, DownloadCloud } from 'react-feather'\r\n\r\nconst FileUploaderSingle = () => {\r\n  // ** State\r\n  const [files, setFiles] = useState([])\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    onDrop: acceptedFiles => {\r\n      setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\r\n    }\r\n  })\r\n\r\n  const renderFilePreview = file => {\r\n    if (file.type.startsWith('image')) {\r\n      return <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\r\n    } else {\r\n      return <FileText size='28' />\r\n    }\r\n  }\r\n\r\n  const handleRemoveFile = file => {\r\n    const uploadedFiles = files\r\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\r\n    setFiles([...filtered])\r\n  }\r\n\r\n  const renderFileSize = size => {\r\n    if (Math.round(size / 100) / 10 > 1000) {\r\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\r\n    } else {\r\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\r\n    }\r\n  }\r\n\r\n  const fileList = files.map((file, index) => (\r\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\r\n      <div className='file-details d-flex align-items-center'>\r\n        <div className='file-preview me-1'>{renderFilePreview(file)}</div>\r\n        <div>\r\n          <p className='file-name mb-0'>{file.name}</p>\r\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\r\n        </div>\r\n      </div>\r\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\r\n        <X size={14} />\r\n      </Button>\r\n    </ListGroupItem>\r\n  ))\r\n\r\n  const handleRemoveAllFiles = () => {\r\n    setFiles([])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Single</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div {...getRootProps({ className: 'dropzone' })}>\r\n          <input {...getInputProps()} />\r\n          <div className='d-flex align-items-center justify-content-center flex-column'>\r\n            <DownloadCloud size={64} />\r\n            <h5>Drop Files here or click to upload</h5>\r\n            <p className='text-secondary'>\r\n              Drop files here or click{' '}\r\n              <a href='/' onClick={e => e.preventDefault()}>\r\n                browse\r\n              </a>{' '}\r\n              thorough your machine\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {files.length ? (\r\n          <Fragment>\r\n            <ListGroup className='my-2'>{fileList}</ListGroup>\r\n            <div className='d-flex justify-content-end'>\r\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\r\n                Remove All\r\n              </Button>\r\n              <Button color='primary'>Upload Files</Button>\r\n            </div>\r\n          </Fragment>\r\n        ) : null}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FileUploaderSingle\r\n","// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Third Party Imports\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { FileText, X, DownloadCloud } from 'react-feather'\r\n\r\nconst FileUploaderMultiple = () => {\r\n  // ** State\r\n  const [files, setFiles] = useState([])\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop: acceptedFiles => {\r\n      setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\r\n    }\r\n  })\r\n\r\n  const renderFilePreview = file => {\r\n    if (file.type.startsWith('image')) {\r\n      return <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\r\n    } else {\r\n      return <FileText size='28' />\r\n    }\r\n  }\r\n\r\n  const handleRemoveFile = file => {\r\n    const uploadedFiles = files\r\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\r\n    setFiles([...filtered])\r\n  }\r\n\r\n  const renderFileSize = size => {\r\n    if (Math.round(size / 100) / 10 > 1000) {\r\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\r\n    } else {\r\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\r\n    }\r\n  }\r\n\r\n  const fileList = files.map((file, index) => (\r\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\r\n      <div className='file-details d-flex align-items-center'>\r\n        <div className='file-preview me-1'>{renderFilePreview(file)}</div>\r\n        <div>\r\n          <p className='file-name mb-0'>{file.name}</p>\r\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\r\n        </div>\r\n      </div>\r\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\r\n        <X size={14} />\r\n      </Button>\r\n    </ListGroupItem>\r\n  ))\r\n\r\n  const handleRemoveAllFiles = () => {\r\n    setFiles([])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Multiple</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div {...getRootProps({ className: 'dropzone' })}>\r\n          <input {...getInputProps()} />\r\n          <div className='d-flex align-items-center justify-content-center flex-column'>\r\n            <DownloadCloud size={64} />\r\n            <h5>Drop Files here or click to upload</h5>\r\n            <p className='text-secondary'>\r\n              Drop files here or click{' '}\r\n              <a href='/' onClick={e => e.preventDefault()}>\r\n                browse\r\n              </a>{' '}\r\n              thorough your machine\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {files.length ? (\r\n          <Fragment>\r\n            <ListGroup className='my-2'>{fileList}</ListGroup>\r\n            <div className='d-flex justify-content-end'>\r\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\r\n                Remove All\r\n              </Button>\r\n              <Button color='primary'>Upload Files</Button>\r\n            </div>\r\n          </Fragment>\r\n        ) : null}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FileUploaderMultiple\r\n","// ** React Imports\r\nimport { useState, Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Button, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Imports\r\nimport { toast } from 'react-toastify'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { X, DownloadCloud } from 'react-feather'\r\n\r\nconst ErrorToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\r\n        <h6 className='toast-title'>Error!</h6>\r\n      </div>\r\n      <small className='text-muted'>a second ago</small>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span role='img' aria-label='toast-text'>\r\n        👋 You can only upload image Files!.\r\n      </span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst FileUploaderRestrictions = () => {\r\n  // ** State\r\n  const [files, setFiles] = useState([])\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    accept: 'image/*',\r\n    onDrop: (acceptedFiles, rejectedFiles) => {\r\n      if (rejectedFiles.length) {\r\n        toast.error(<ErrorToast />, { icon: false, hideProgressBar: true })\r\n      } else {\r\n        setFiles([...files, ...acceptedFiles.map(file => Object.assign(file))])\r\n      }\r\n    }\r\n  })\r\n\r\n  const handleRemoveFile = file => {\r\n    const uploadedFiles = files\r\n    const filtered = uploadedFiles.filter(i => i.name !== file.name)\r\n    setFiles([...filtered])\r\n  }\r\n\r\n  const renderFileSize = size => {\r\n    if (Math.round(size / 100) / 10 > 1000) {\r\n      return `${(Math.round(size / 100) / 10000).toFixed(1)} mb`\r\n    } else {\r\n      return `${(Math.round(size / 100) / 10).toFixed(1)} kb`\r\n    }\r\n  }\r\n\r\n  const fileList = files.map((file, index) => (\r\n    <ListGroupItem key={`${file.name}-${index}`} className='d-flex align-items-center justify-content-between'>\r\n      <div className='file-details d-flex align-items-center'>\r\n        <div className='file-preview me-1'>\r\n          <img className='rounded' alt={file.name} src={URL.createObjectURL(file)} height='28' width='28' />\r\n        </div>\r\n        <div>\r\n          <p className='file-name mb-0'>{file.name}</p>\r\n          <p className='file-size mb-0'>{renderFileSize(file.size)}</p>\r\n        </div>\r\n      </div>\r\n      <Button color='danger' outline size='sm' className='btn-icon' onClick={() => handleRemoveFile(file)}>\r\n        <X size={14} />\r\n      </Button>\r\n    </ListGroupItem>\r\n  ))\r\n\r\n  const handleRemoveAllFiles = () => {\r\n    setFiles([])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Restrictions</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div {...getRootProps({ className: 'dropzone' })}>\r\n          <input {...getInputProps()} />\r\n          <div className='d-flex align-items-center justify-content-center flex-column'>\r\n            <DownloadCloud size={64} />\r\n            <h5>Drop Files here or click to upload</h5>\r\n            <p className='text-secondary'>\r\n              Drop files here or click{' '}\r\n              <a href='/' onClick={e => e.preventDefault()}>\r\n                browse\r\n              </a>{' '}\r\n              thorough your machine\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {files.length ? (\r\n          <Fragment>\r\n            <ListGroup className='my-2'>{fileList}</ListGroup>\r\n            <div className='d-flex justify-content-end'>\r\n              <Button className='me-1' color='danger' outline onClick={handleRemoveAllFiles}>\r\n                Remove All\r\n              </Button>\r\n              <Button color='primary'>Upload Files</Button>\r\n            </div>\r\n          </Fragment>\r\n        ) : null}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FileUploaderRestrictions\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport ExtensionsHeader from '@components/extensions-header'\r\n\r\n// ** Demo Components\r\nimport FileUploaderSingle from './FileUploaderSingle'\r\nimport FileUploaderMultiple from './FileUploaderMultiple'\r\nimport FileUploaderRestrictions from './FileUploaderRestrictions'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\r\n\r\nconst Uploader = () => {\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='React Dropzone'\r\n        link='https://github.com/react-dropzone/react-dropzone'\r\n        subTitle=\"Simple React hook to create a HTML5-compliant drag'n'drop zone for files.\"\r\n      />\r\n\r\n      <Row>\r\n        <Col sm='12'>\r\n          <FileUploaderMultiple />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <FileUploaderSingle />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <FileUploaderRestrictions />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Uploader\r\n","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row className='mb-2'>\r\n      <Col sm='12' className='ms-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  link: Proptypes.string,\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}