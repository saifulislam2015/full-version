{"version":3,"sources":["@core/components/widgets/stats/StatsWithLineChart.js","views/ui-elements/cards/statistics/Newsletter.js","views/ui-elements/cards/statistics/SiteTraffic.js","views/ui-elements/cards/statistics/ActiveUsers.js","views/ui-elements/cards/statistics/QuaterlySales.js","views/ui-elements/cards/statistics/RevenueGenerated.js","@core/components/widgets/stats/StatsVertical.js","views/ui-elements/cards/statistics/index.js","@core/components/breadcrumbs/index.js","@core/components/widgets/stats/StatsWithAreaChart.js","@core/components/widgets/stats/TinyChartStats.js","@core/components/widgets/stats/ChartOptions.js","@core/components/widgets/stats/StatsHorizontal.js","views/ui-elements/cards/statistics/OrdersReceived.js","views/ui-elements/cards/statistics/SubscribersGained.js","views/ui-elements/cards/statistics/StatsCard.js","views/ui-elements/cards/statistics/OrdersBarChart.js","views/ui-elements/cards/statistics/ProfitLineChart.js"],"names":["StatsWithLineChart","icon","color","stats","statTitle","series","options","type","height","rest","className","defaultProps","lineChartOptions","Newsletter","warning","useState","data","setData","useEffect","axios","get","then","res","chart","id","toolbar","show","sparkline","enabled","dropShadow","top","left","blur","opacity","grid","colors","dataLabels","stroke","curve","width","fill","gradient","shadeIntensity","gradientToColors","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","size","SiteTraffic","ActiveUsers","success","QuarterlySales","danger","StatsWithAreaChart","analyticsData","sales","RevenueGenerated","kFormatter","revenue","StatsVertical","StatisticsCards","context","useContext","ThemeColors","breadCrumbTitle","breadCrumbParent","breadCrumbActive","lg","xs","OrdersBarChart","main","ProfitLineChart","info","sm","StatsCard","cols","md","xl","StatsHorizontal","SubscribersGained","QuaterlySales","OrdersReceived","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","tag","to","active","end","Link","classnames","areaChartOptions","TinyChartStats","title","renderStats","statsMargin","orders","subscribers","subtitle","map","item","index","colMargin","Object","keys","margin","length","stacked","padding","right","bottom","plotOptions","bar","horizontal","columnWidth","borderRadius","backgroundBarColors","backgroundBarRadius","legend","axisTicks","statistics","zoom","borderColor","strokeDashArray","lines","markers","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","style","fontSize"],"mappings":"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","file":"static/js/39.89cc3409.chunk.js","sourcesContent":["// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardText } from 'reactstrap'\r\n\r\n// ** Default Options\r\nimport { lineChartOptions } from './ChartOptions'\r\n\r\nconst StatsWithLineChart = ({ icon, color, stats, statTitle, series, options, type, height, ...rest }) => {\r\n  return (\r\n    <Card {...rest}>\r\n      <CardHeader className='align-items-start pb-0'>\r\n        <div>\r\n          <h2 className='fw-bolder'>{stats}</h2>\r\n          <CardText>{statTitle}</CardText>\r\n        </div>\r\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\r\n      </CardHeader>\r\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsWithLineChart\r\n\r\n// ** PropTypes\r\nStatsWithLineChart.propTypes = {\r\n  type: PropTypes.string,\r\n  height: PropTypes.string,\r\n  options: PropTypes.object,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  series: PropTypes.array.isRequired,\r\n  statTitle: PropTypes.string.isRequired\r\n}\r\n\r\n// ** Default Props\r\nStatsWithLineChart.defaultProps = {\r\n  options: lineChartOptions,\r\n  color: 'primary'\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Mail } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\r\n\r\nconst Newsletter = ({ warning }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/newsletter').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'newsletter',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      },\r\n      dropShadow: {\r\n        enabled: true,\r\n        top: 5,\r\n        left: 0,\r\n        blur: 4,\r\n        opacity: 0.1\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [warning],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        gradientToColors: ['#ffc085'],\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        stops: [0, 100, 100, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <StatsWithLineChart\r\n      icon={<Mail size={21} />}\r\n      color='warning'\r\n      stats='28.7k'\r\n      statTitle='Newsletter'\r\n      series={data.series}\r\n      type='line'\r\n      options={options}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default Newsletter\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Monitor } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\r\n\r\nconst SiteTraffic = () => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/site-traffic').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithLineChart\r\n      icon={<Monitor size={21} />}\r\n      color='primary'\r\n      stats='78.9k'\r\n      statTitle='Site Traffic'\r\n      series={data.series}\r\n      type='line'\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default SiteTraffic\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { UserCheck } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\r\n\r\nconst ActiveUsers = ({ success }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/active-users').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'activeUsers',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      },\r\n      dropShadow: {\r\n        enabled: true,\r\n        top: 5,\r\n        left: 0,\r\n        blur: 4,\r\n        opacity: 0.1\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [success],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        gradientToColors: ['#55DD92'],\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        stops: [0, 100, 100, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <StatsWithLineChart\r\n      icon={<UserCheck size={21} />}\r\n      color='success'\r\n      stats='659.8k'\r\n      statTitle='Active Users'\r\n      series={data.series}\r\n      options={options}\r\n      type='line'\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default ActiveUsers\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { ShoppingCart } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst QuarterlySales = ({ danger }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'revenue',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [danger],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2.5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 0.9,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.5,\r\n        stops: [0, 80, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/sales').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<ShoppingCart size={21} />}\r\n      color='danger'\r\n      stats={data.analyticsData.sales}\r\n      statTitle='Quarterly Sales'\r\n      options={options}\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\nexport default QuarterlySales\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { CreditCard } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst RevenueGenerated = ({ kFormatter, success }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'revenue',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [success],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2.5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 0.9,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.5,\r\n        stops: [0, 80, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/revenue').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<CreditCard size={21} />}\r\n      color='success'\r\n      stats={kFormatter(data.analyticsData.revenue)}\r\n      statTitle='Revenue Generated'\r\n      options={options}\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\nexport default RevenueGenerated\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsVertical = ({ icon, color, stats, statTitle, className }) => {\r\n  return (\r\n    <Card className='text-center'>\r\n      <CardBody className={className}>\r\n        <div className={`avatar p-50 m-0 mb-1 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n          <div className='avatar-content'>{icon}</div>\r\n        </div>\r\n        <h2 className='fw-bolder'>{stats}</h2>\r\n        <p className='card-text line-ellipsis'>{statTitle}</p>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsVertical\r\n\r\n// ** PropTypes\r\nStatsVertical.propTypes = {\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useContext } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { kFormatter } from '@utils'\r\n\r\n// ** Context\r\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\r\n\r\n// ** Custom Components\r\nimport StatsCard from './StatsCard'\r\nimport Newsletter from './Newsletter'\r\nimport SiteTraffic from './SiteTraffic'\r\nimport ActiveUsers from './ActiveUsers'\r\nimport QuaterlySales from './QuaterlySales'\r\nimport OrdersReceived from './OrdersReceived'\r\nimport OrdersBarChart from './OrdersBarChart'\r\nimport ProfitLineChart from './ProfitLineChart'\r\nimport RevenueGenerated from './RevenueGenerated'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport SubscribersGained from './SubscribersGained'\r\nimport StatsVertical from '@components/widgets/stats/StatsVertical'\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport {\r\n  Eye,\r\n  Cpu,\r\n  Heart,\r\n  Award,\r\n  Truck,\r\n  Server,\r\n  Activity,\r\n  ShoppingBag,\r\n  AlertOctagon,\r\n  MessageSquare\r\n} from 'react-feather'\r\n\r\nconst StatisticsCards = () => {\r\n  // ** Context\r\n  const context = useContext(ThemeColors)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Statistics Cards' breadCrumbParent='Card' breadCrumbActive='Statistics Cards' />\r\n\r\n      <Row>\r\n        {/* Orders Bar Chart */}\r\n        <Col lg='2' xs='6'>\r\n          <OrdersBarChart warning={context.colors.warning.main} />\r\n        </Col>\r\n        {/* Orders Bar Chart */}\r\n\r\n        {/* Profit Line Chart */}\r\n        <Col lg='2' xs='6'>\r\n          <ProfitLineChart info={context.colors.info.main} />\r\n        </Col>\r\n        {/* Profit Line Chart */}\r\n\r\n        {/* Stats Card */}\r\n        <Col lg='8' sm='12'>\r\n          <StatsCard cols={{ md: '3', sm: '6', xs: '12' }} />\r\n        </Col>\r\n        {/* Stats Card */}\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Stats With Icons */}\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<Eye size={21} />} color='info' stats='36.9k' statTitle='Views' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<MessageSquare size={21} />} color='warning' stats='12k' statTitle='Comments' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<ShoppingBag size={21} />} color='danger' stats='97.8k' statTitle='Orders' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<Heart size={21} />} color='primary' stats='26.8' statTitle='Bookmarks' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<Award size={21} />} color='success' stats='689' statTitle='Reviews' />\r\n        </Col>\r\n        <Col xl='2' md='4' sm='6'>\r\n          <StatsVertical icon={<Truck size={21} />} color='danger' stats='2.1k' statTitle='Returns' />\r\n        </Col>\r\n        {/* Stats With Icons */}\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Stats With Icons Horizontal */}\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal icon={<Cpu size={21} />} color='primary' stats='86%' statTitle='CPU Usage' />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal icon={<Server size={21} />} color='success' stats='1.2gb' statTitle='Memory Usage' />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal icon={<Activity size={21} />} color='danger' stats='0.1%' statTitle='Downtime Ratio' />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal icon={<AlertOctagon size={21} />} color='warning' stats='13' statTitle='Issues Found' />\r\n        </Col>\r\n        {/* Stats With Icons Horizontal */}\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Stats Area Charts */}\r\n        <Col lg='3' sm='6'>\r\n          <SubscribersGained kFormatter={kFormatter} />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <RevenueGenerated kFormatter={kFormatter} success={context.colors.success.main} />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <QuaterlySales danger={context.colors.danger.main} />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <OrdersReceived kFormatter={kFormatter} warning={context.colors.warning.main} />\r\n        </Col>\r\n        {/* Stats Area Charts */}\r\n      </Row>\r\n\r\n      <Row>\r\n        {/* Stats Line Charts */}\r\n        <Col lg='4' sm='6'>\r\n          <SiteTraffic />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <ActiveUsers success={context.colors.success.main} />\r\n        </Col>\r\n        <Col lg='4' sm='6'>\r\n          <Newsletter warning={context.colors.warning.main} />\r\n        </Col>\r\n        {/* Stats Line Charts */}\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default StatisticsCards\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\n// ** Default Options\r\nimport { areaChartOptions } from './ChartOptions'\r\n\r\nconst StatsWithAreaChart = props => {\r\n  // ** Props\r\n  const { icon, color, stats, statTitle, series, options, type, height, className, ...rest } = props\r\n  return (\r\n    <Card {...rest}>\r\n      <CardBody\r\n        className={classnames('pb-0', {\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\r\n        <h2 className='fw-bolder mt-1'>{stats}</h2>\r\n        <p className='card-text'>{statTitle}</p>\r\n      </CardBody>\r\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsWithAreaChart\r\n\r\n// ** PropTypes\r\nStatsWithAreaChart.propTypes = {\r\n  type: PropTypes.string,\r\n  height: PropTypes.string,\r\n  options: PropTypes.object,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  series: PropTypes.array.isRequired,\r\n  statTitle: PropTypes.string.isRequired\r\n}\r\n\r\n// ** Default Props\r\nStatsWithAreaChart.defaultProps = {\r\n  color: 'primary',\r\n  options: areaChartOptions\r\n}\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport Chart from 'react-apexcharts'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst TinyChartStats = props => {\r\n  // ** Props\r\n  const { title, stats, options, series, type, height } = props\r\n\r\n  return (\r\n    <Card className='card-tiny-line-stats'>\r\n      <CardBody className='pb-50'>\r\n        <h6>{title}</h6>\r\n        <h2 className='fw-bolder mb-1'>{stats}</h2>\r\n        <Chart options={options} series={series} type={type} height={height} />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TinyChartStats\r\n\r\n// ** PropTypes\r\nTinyChartStats.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.string.isRequired,\r\n  series: PropTypes.array.isRequired,\r\n  options: PropTypes.object.isRequired\r\n}\r\n\r\n// ** Default Props\r\nTinyChartStats.defaultProps = {\r\n  height: 100\r\n}\r\n","// ** Area Chart Common Options\r\nexport const areaChartOptions = {\r\n  chart: {\r\n    toolbar: {\r\n      show: false\r\n    },\r\n    sparkline: {\r\n      enabled: true\r\n    }\r\n  },\r\n  grid: {\r\n    show: false\r\n  },\r\n  colors: ['#7367F0'],\r\n  dataLabels: {\r\n    enabled: false\r\n  },\r\n  stroke: {\r\n    curve: 'smooth',\r\n    width: 2.5\r\n  },\r\n  fill: {\r\n    type: 'gradient',\r\n    gradient: {\r\n      shadeIntensity: 0.9,\r\n      opacityFrom: 0.7,\r\n      opacityTo: 0.5,\r\n      stops: [0, 80, 100]\r\n    }\r\n  },\r\n  xaxis: {\r\n    labels: {\r\n      show: false\r\n    },\r\n    axisBorder: {\r\n      show: false\r\n    }\r\n  },\r\n  yaxis: {\r\n    labels: {\r\n      show: false\r\n    }\r\n  },\r\n  tooltip: {\r\n    x: { show: false }\r\n  }\r\n}\r\n\r\n// ** Line Chart Common Options\r\nexport const lineChartOptions = {\r\n  chart: {\r\n    toolbar: {\r\n      show: false\r\n    },\r\n    sparkline: {\r\n      enabled: true\r\n    },\r\n    dropShadow: {\r\n      enabled: true,\r\n      top: 5,\r\n      left: 0,\r\n      blur: 4,\r\n      opacity: 0.1\r\n    }\r\n  },\r\n  grid: {\r\n    show: false\r\n  },\r\n  colors: ['#7367F0'],\r\n  dataLabels: {\r\n    enabled: false\r\n  },\r\n  stroke: {\r\n    curve: 'smooth',\r\n    width: 5\r\n  },\r\n  fill: {\r\n    type: 'gradient',\r\n    gradient: {\r\n      shadeIntensity: 1,\r\n      gradientToColors: ['#A9A2F6'],\r\n      opacityFrom: 1,\r\n      opacityTo: 1,\r\n      stops: [0, 100, 100, 100]\r\n    }\r\n  },\r\n\r\n  xaxis: {\r\n    labels: {\r\n      show: false\r\n    },\r\n    axisBorder: {\r\n      show: false\r\n    }\r\n  },\r\n  yaxis: {\r\n    labels: {\r\n      show: false\r\n    }\r\n  },\r\n  tooltip: {\r\n    x: { show: false }\r\n  }\r\n}\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className={className}>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div>\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <h2\r\n                className={classnames('fw-bolder', {\r\n                  'mb-0': !statsMargin,\r\n                  [statsMargin]: statsMargin\r\n                })}\r\n              >\r\n                {stats}\r\n              </h2>\r\n            )}\r\n\r\n            <p className='card-text'>{statTitle}</p>\r\n          </div>\r\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n            <div className='avatar-content'>{icon}</div>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired,\r\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\r\n}\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Package } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst OrdersReceived = ({ kFormatter, warning }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'revenue',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      }\r\n    },\r\n    grid: {\r\n      show: false\r\n    },\r\n    colors: [warning],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2.5\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 0.9,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.5,\r\n        stops: [0, 80, 100]\r\n      }\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: { show: false }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/orders').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<Package size={21} />}\r\n      color='warning'\r\n      stats={kFormatter(data.analyticsData.orders)}\r\n      statTitle='Orders Received'\r\n      options={options}\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\nexport default OrdersReceived\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Users } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\r\n\r\nconst SubscribersGained = ({ kFormatter }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/subscribers').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <StatsWithAreaChart\r\n      icon={<Users size={21} />}\r\n      color='primary'\r\n      stats={kFormatter(data.analyticsData.subscribers)}\r\n      statTitle='Subscribers Gained'\r\n      series={data.series}\r\n      type='area'\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default SubscribersGained\r\n","// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { TrendingUp, User, Box, DollarSign } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\r\n\r\nconst StatsCard = ({ cols }) => {\r\n  const data = [\r\n    {\r\n      title: '230k',\r\n      subtitle: 'Sales',\r\n      color: 'light-primary',\r\n      icon: <TrendingUp size={24} />\r\n    },\r\n    {\r\n      title: '8.549k',\r\n      subtitle: 'Customers',\r\n      color: 'light-info',\r\n      icon: <User size={24} />\r\n    },\r\n    {\r\n      title: '1.423k',\r\n      subtitle: 'Products',\r\n      color: 'light-danger',\r\n      icon: <Box size={24} />\r\n    },\r\n    {\r\n      title: '$9745',\r\n      subtitle: 'Revenue',\r\n      color: 'light-success',\r\n      icon: <DollarSign size={24} />\r\n    }\r\n  ]\r\n\r\n  const renderData = () => {\r\n    return data.map((item, index) => {\r\n      const colMargin = Object.keys(cols)\r\n      const margin = index === 2 ? 'sm' : colMargin[0]\r\n      return (\r\n        <Col\r\n          key={index}\r\n          {...cols}\r\n          className={classnames({\r\n            [`mb-2 mb-${margin}-0`]: index !== data.length - 1\r\n          })}\r\n        >\r\n          <div className='d-flex align-items-center'>\r\n            <Avatar color={item.color} icon={item.icon} className='me-2' />\r\n            <div className='my-auto'>\r\n              <h4 className='fw-bolder mb-0'>{item.title}</h4>\r\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card className='card-statistics'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Statistics</CardTitle>\r\n        <CardText className='card-text font-small-2 me-25 mb-0'>Updated 1 month ago</CardText>\r\n      </CardHeader>\r\n      <CardBody className='statistics-body'>\r\n        <Row>{renderData()}</Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsCard\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\r\n\r\nconst OrdersBarChart = ({ warning }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      stacked: true,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    grid: {\r\n      show: false,\r\n      padding: {\r\n        left: 0,\r\n        right: 0,\r\n        top: -15,\r\n        bottom: -15\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: '20%',\r\n        borderRadius: [0, 5],\r\n        colors: {\r\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\r\n          backgroundBarRadius: 5\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    colors: [warning],\r\n    xaxis: {\r\n      labels: {\r\n        show: false\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      show: false\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <TinyChartStats\r\n      height={70}\r\n      type='bar'\r\n      options={options}\r\n      title={data.title}\r\n      stats={data.statistics}\r\n      series={data.series}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default OrdersBarChart\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\r\n\r\nconst ProfitLineChart = ({ info }) => {\r\n  // ** State\r\n  const [data, setData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\r\n    return () => setData(null)\r\n  }, [])\r\n\r\n  const options = {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      zoom: {\r\n        enabled: false\r\n      }\r\n    },\r\n    grid: {\r\n      borderColor: '#EBEBEB',\r\n      strokeDashArray: 5,\r\n      xaxis: {\r\n        lines: {\r\n          show: true\r\n        }\r\n      },\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      },\r\n      padding: {\r\n        top: -30,\r\n        bottom: -10\r\n      }\r\n    },\r\n    stroke: {\r\n      width: 3\r\n    },\r\n    colors: [info],\r\n    series: [\r\n      {\r\n        data: [0, 20, 5, 30, 15, 45]\r\n      }\r\n    ],\r\n    markers: {\r\n      size: 2,\r\n      colors: info,\r\n      strokeColors: info,\r\n      strokeWidth: 2,\r\n      strokeOpacity: 1,\r\n      strokeDashArray: 0,\r\n      fillOpacity: 1,\r\n      discrete: [\r\n        {\r\n          seriesIndex: 0,\r\n          dataPointIndex: 5,\r\n          fillColor: '#ffffff',\r\n          strokeColor: info,\r\n          size: 5\r\n        }\r\n      ],\r\n      shape: 'circle',\r\n      radius: 2,\r\n      hover: {\r\n        size: 3\r\n      }\r\n    },\r\n    xaxis: {\r\n      labels: {\r\n        show: true,\r\n        style: {\r\n          fontSize: '0px'\r\n        }\r\n      },\r\n      axisBorder: {\r\n        show: false\r\n      },\r\n      axisTicks: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      show: false\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    }\r\n  }\r\n\r\n  return data !== null ? (\r\n    <TinyChartStats\r\n      height={70}\r\n      type='line'\r\n      options={options}\r\n      title={data.title}\r\n      stats={data.statistics}\r\n      series={data.series}\r\n    />\r\n  ) : null\r\n}\r\n\r\nexport default ProfitLineChart\r\n"],"sourceRoot":""}