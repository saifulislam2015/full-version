{"version":3,"sources":["views/forms/form-elements/select/SelectReact.js","views/forms/form-elements/select/SelectSizing.js","views/forms/form-elements/select/SelectOptions.js","views/forms/form-elements/select/SelectReactstrap.js","views/forms/form-elements/select/index.js","@core/components/breadcrumbs/index.js"],"names":["colourOptions","value","label","SelectReact","tag","className","target","href","rel","md","sm","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","name","isLoading","isDisabled","SelectReactstrap","for","type","bsSize","id","colorOptions","color","isFixed","iconOptions","icon","Facebook","Twitter","Linkedin","GitHub","Instagram","Dribbble","Gitlab","File","FileText","Image","Figma","Chrome","Globe","Slack","Youtube","OptionComponent","data","props","Icon","Option","size","groupedOptions","animatedComponents","makeAnimated","styles","multiValue","base","state","opacity","multiValueLabel","paddingRight","multiValueRemove","display","orderOptions","values","length","filter","v","concat","formatGroupLabel","SelectOptions","useState","fixedValue","setFixedValue","isMulti","closeMenuOnSelect","components","onChange","action","removedValue","xs","loadOptions","inputValue","callback","setTimeout","i","toLowerCase","includes","filterColors1","defaultOptions","onInputChange","newValue","replace","Promise","resolve","filterColors2","cacheOptions","disabled","multiple","Select","breadCrumbTitle","breadCrumbParent","breadCrumbActive","SelectSizing","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","to","active","end","Link"],"mappings":"iNASMA,EAAgB,CACpB,CAAEC,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,SAAUC,MAAO,WA0EbC,EAvEK,WAClB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAWC,IAAI,KAAf,4BAGF,eAAC,IAAD,WACE,4MAEoE,IAClE,mBAAGC,UAAU,QAAQC,OAAO,SAASC,KAAK,gCAAgCC,IAAI,sBAA9E,kBAHF,OAQA,eAAC,KAAD,WACE,eAAC,IAAD,CAAKH,UAAU,OAAOI,GAAG,IAAIC,GAAG,KAAhC,UACE,cAAC,IAAD,CAAOL,UAAU,aAAjB,mBACA,cAAC,IAAD,CACEM,MAAOC,IACPP,UAAU,eACVQ,gBAAgB,SAChBC,aAAcd,EAAc,GAC5Be,QAASf,EACTgB,aAAa,OAGjB,eAAC,IAAD,CAAKX,UAAU,OAAOI,GAAG,IAAIC,GAAG,KAAhC,UACE,cAAC,IAAD,CAAOL,UAAU,aAAjB,uBACA,cAAC,IAAD,CACEM,MAAOC,IACPP,UAAU,eACVQ,gBAAgB,SAChBC,aAAcd,EAAc,GAC5BiB,KAAK,QACLF,QAASf,EACTgB,aAAW,OAGf,eAAC,IAAD,CAAKX,UAAU,OAAOI,GAAG,IAAIC,GAAG,KAAhC,UACE,cAAC,IAAD,CAAOL,UAAU,aAAjB,qBACA,cAAC,IAAD,CACEM,MAAOC,IACPP,UAAU,eACVQ,gBAAgB,SAChBC,aAAcd,EAAc,GAC5BiB,KAAK,UACLF,QAASf,EACTkB,WAAW,EACXF,aAAa,OAGjB,eAAC,IAAD,CAAKX,UAAU,OAAOI,GAAG,IAAIC,GAAG,KAAhC,UACE,cAAC,IAAD,CAAOL,UAAU,aAAjB,sBACA,cAAC,IAAD,CACEM,MAAOC,IACPP,UAAU,eACVQ,gBAAgB,SAChBC,aAAcd,EAAc,GAC5BiB,KAAK,WACLF,QAASf,EACTmB,YAAY,EACZH,aAAa,iBCpCZI,EAzCU,WACvB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAWhB,IAAI,KAAf,gCAEF,eAAC,IAAD,WACE,sBAAKC,UAAU,OAAf,UACE,cAAC,IAAD,CAAOA,UAAU,aAAagB,IAAI,YAAlC,0BAGA,eAAC,IAAD,CAAOC,KAAK,SAASL,KAAK,SAASM,OAAO,KAAKC,GAAG,YAAlD,UACE,kDACA,kDACA,wDAGJ,sBAAKnB,UAAU,OAAf,UACE,cAAC,IAAD,CAAOA,UAAU,aAAagB,IAAI,iBAAlC,4BAGA,eAAC,IAAD,CAAOC,KAAK,SAASL,KAAK,SAASO,GAAG,iBAAtC,UACE,kDACA,kDACA,wDAGJ,gCACE,cAAC,IAAD,CAAOnB,UAAU,aAAagB,IAAI,YAAlC,0BAGA,eAAC,IAAD,CAAOC,KAAK,SAASL,KAAK,SAASM,OAAO,KAAKC,GAAG,YAAlD,UACE,kDACA,kDACA,+D,kNCLNC,EAAe,CACnB,CAAExB,MAAO,QAASC,MAAO,QAASwB,MAAO,UAAWC,SAAS,GAC7D,CAAE1B,MAAO,OAAQC,MAAO,OAAQwB,MAAO,UAAWC,SAAS,GAC3D,CAAE1B,MAAO,SAAUC,MAAO,SAAUwB,MAAO,UAAWC,SAAS,GAC/D,CAAE1B,MAAO,MAAOC,MAAO,MAAOwB,MAAO,UAAWC,SAAS,GACzD,CAAE1B,MAAO,SAAUC,MAAO,SAAUwB,MAAO,UAAWC,SAAS,GAC/D,CAAE1B,MAAO,SAAUC,MAAO,SAAUwB,MAAO,UAAWC,SAAS,IAG3DC,EAAc,CAClB,CACE1B,MAAO,eACPa,QAAS,CACP,CACEd,MAAO,WACPC,MAAO,WACP2B,KAAMC,KAER,CACE7B,MAAO,UACPC,MAAO,UACP2B,KAAME,KAER,CACE9B,MAAO,WACPC,MAAO,WACP2B,KAAMG,KAER,CACE/B,MAAO,SACPC,MAAO,SACP2B,KAAMI,KAER,CACEhC,MAAO,YACPC,MAAO,YACP2B,KAAMK,KAER,CACEjC,MAAO,WACPC,MAAO,WACP2B,KAAMM,KAER,CACElC,MAAO,SACPC,MAAO,SACP2B,KAAMO,OAIZ,CACElC,MAAO,aACPa,QAAS,CACP,CAAEd,MAAO,MAAOC,MAAO,MAAO2B,KAAMQ,KACpC,CAAEpC,MAAO,MAAOC,MAAO,MAAO2B,KAAMS,KACpC,CAAErC,MAAO,QAASC,MAAO,QAAS2B,KAAMU,OAG5C,CACErC,MAAO,SACPa,QAAS,CACP,CAAEd,MAAO,QAASC,MAAO,QAAS2B,KAAMW,KACxC,CAAEvC,MAAO,SAAUC,MAAO,SAAU2B,KAAMY,KAC1C,CAAExC,MAAO,SAAUC,MAAO,SAAU2B,KAAMa,KAC1C,CAAEzC,MAAO,QAASC,MAAO,QAAS2B,KAAMc,KACxC,CAAE1C,MAAO,UAAWC,MAAO,UAAW2B,KAAMe,QAK5CC,EAAkB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,iBACxCC,EAAOF,EAAKjB,KAElB,OACE,eAAC,IAAWoB,OAAZ,2BAAuBF,GAAvB,cACE,cAACC,EAAD,CAAM3C,UAAU,QAAQ6C,KAAM,KAC7BJ,EAAK5C,WAKNiD,EAAiB,CACrB,CACEjD,MAAO,aACPa,QAAS,CACP,CAAEd,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,iBAAkBC,MAAO,kBAClC,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,iBAAkBC,MAAO,oBAGtC,CACEA,MAAO,SACPa,QAAS,CACP,CAAEd,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,UAAWC,MAAO,cAK3BkD,EAAqBC,cAErBC,EAAS,CACbC,WAAY,SAACC,EAAMC,GACjB,OAAOA,EAAMX,KAAKnB,QAAX,2BAA0B6B,GAA1B,IAAgCE,QAAS,QAAUF,GAE5DG,gBAAiB,SAACH,EAAMC,GACtB,OAAOA,EAAMX,KAAKnB,QAAX,2BAA0B6B,GAA1B,IAAgC9B,MAAO,UAAWkC,aAAc,IAAMJ,GAE/EK,iBAAkB,SAACL,EAAMC,GACvB,OAAOA,EAAMX,KAAKnB,QAAX,2BAA0B6B,GAA1B,IAAgCM,QAAS,SAAWN,IAIzDO,EAAe,SAAAC,GACnB,GAAIA,EAAOC,OAAS,EAAG,OAAOD,EAAOE,QAAO,SAAAC,GAAC,OAAIA,EAAExC,WAASyC,OAAOJ,EAAOE,QAAO,SAAAC,GAAC,OAAKA,EAAExC,aAGrF0C,EAAmB,SAAAvB,GAAI,OAC3B,sBAAKzC,UAAU,8CAAf,UACE,iCACE,+BAAOyC,EAAK5C,UAEd,+BAAO4C,EAAK/B,QAAQkD,aAgKTK,EA5JO,WAEpB,MAAoCC,mBAASR,EAAa,CAACtC,EAAa,GAAIA,EAAa,GAAIA,EAAa,MAA1G,mBAAO+C,EAAP,KAAmBC,EAAnB,KAgDA,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAWrE,IAAI,KAAf,uBAGF,cAAC,IAAD,UACE,eAAC,KAAD,WACE,eAAC,IAAD,CAAKC,UAAU,OAAOI,GAAG,IAAIC,GAAG,KAAhC,UACE,cAAC,IAAD,CAAOL,UAAU,aAAjB,0BACA,cAAC,IAAD,CACEW,aAAa,EACbL,MAAOC,IACPE,aAAc,CAACW,EAAa,GAAIA,EAAa,IAC7CiD,SAAO,EACPzD,KAAK,SACLF,QAASU,EACTpB,UAAU,eACVQ,gBAAgB,cAGpB,eAAC,IAAD,CAAKR,UAAU,OAAOI,GAAG,IAAIC,GAAG,KAAhC,UACE,cAAC,IAAD,CAAOL,UAAU,aAAjB,4BACA,cAAC,IAAD,CACEW,aAAa,EACbL,MAAOC,IACPE,aAAcW,EAAa,GAC3BV,QAASoC,EACTkB,iBAAkBA,EAClBhE,UAAU,eACVQ,gBAAgB,cAGpB,eAAC,IAAD,CAAKR,UAAU,OAAOI,GAAG,IAAIC,GAAG,KAAhC,UACE,cAAC,IAAD,CAAOL,UAAU,aAAjB,6BACA,cAAC,IAAD,CACEW,aAAa,EACbL,MAAOC,IACP+D,mBAAmB,EACnBC,WAAYxB,EACZtC,aAAc,CAACW,EAAa,GAAIA,EAAa,IAC7CiD,SAAO,EACP3D,QAASU,EACTpB,UAAU,eACVQ,gBAAgB,cAGpB,eAAC,IAAD,CAAKR,UAAU,OAAOI,GAAG,IAAIC,GAAG,KAAhC,UACE,cAAC,IAAD,CAAOL,UAAU,aAAjB,kCACA,cAAC,IAAD,CACEW,aAAa,EACbf,MAAOuE,EACPlB,OAAQA,EACRoB,SAAO,EACPG,SAtFU,SAAC5E,EAAD,GAAsC,IAA5B6E,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACtC,OAAQD,GACN,IAAK,eACL,IAAK,YACH,GAAIC,EAAapD,QACf,OAEF,MACF,IAAK,QACH1B,EAAQwB,EAAayC,QAAO,SAAAC,GAAC,OAAIA,EAAExC,WAMvC1B,EAAQ8D,EAAa9D,GACrBwE,EAAcxE,IAuEJU,MAAOC,IACPK,KAAK,SACLZ,UAAU,eACVQ,gBAAgB,SAChBE,QAASU,OAGb,eAAC,IAAD,CAAKhB,GAAI,EAAGuE,GAAI,GAAI3E,UAAU,OAA9B,UACE,cAAC,IAAD,CAAOA,UAAU,aAAjB,mCACA,cAAC,IAAD,CACEW,aAAa,EACbX,UAAU,eACVQ,gBAAgB,SAChBI,KAAK,wBACLgE,YA/GQ,SAACC,EAAYC,GAC/BC,YAAW,WACTD,EANkB,SAAAD,GACpB,OAAOzD,EAAayC,QAAO,SAAAmB,GAAC,OAAIA,EAAEnF,MAAMoF,cAAcC,SAASL,EAAWI,kBAK/DE,CAAcN,MACtB,MA6GOO,gBAAc,EACdC,cApFc,SAAAC,GAExB,OADYA,EAASC,QAAQ,MAAO,KAoF1BjF,MAAOC,SAGX,eAAC,IAAD,CAAKH,GAAI,EAAGuE,GAAI,GAAI3E,UAAU,OAA9B,UACE,cAAC,IAAD,CAAOA,UAAU,aAAjB,mCACA,cAAC,IAAD,CACEW,aAAa,EACbX,UAAU,eACVQ,gBAAgB,SAChBoE,YAzFW,SAAAC,GACrB,OAAO,IAAIW,SAAQ,SAAAC,GACjBV,YAAW,WACTU,EA/BgB,SAAAZ,GACpB,OAAOzD,EAAayC,QAAO,SAAAmB,GAAC,OAAIA,EAAEnF,MAAMoF,cAAcC,SAASL,EAAWI,kBA8B9DS,CAAcb,MACrB,SAsFKc,cAAY,EACZP,gBAAc,OAGlB,eAAC,IAAD,CAAKpF,UAAU,OAAOI,GAAG,IAAIC,GAAG,KAAhC,UACE,cAAC,IAAD,CAAOL,UAAU,aAAjB,8BACA,cAAC,IAAD,CAAiBU,QAASU,EAAcpB,UAAU,eAAeQ,gBAAgB,cAEnF,eAAC,IAAD,CAAKR,UAAU,OAAOI,GAAG,IAAIC,GAAG,KAAhC,UACE,cAAC,IAAD,CAAOL,UAAU,aAAjB,mBACA,cAAC,IAAD,CACEU,QAASa,EACTvB,UAAU,eACVQ,gBAAgB,SAChB+D,WAAY,CACV3B,OAAQJ,iBC9PTzB,EArDU,WACvB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAWhB,IAAI,KAAf,iCAEF,eAAC,IAAD,WACE,sBAAKC,UAAU,OAAf,UACE,cAAC,IAAD,CAAOA,UAAU,aAAagB,IAAI,eAAlC,0BAGA,eAAC,IAAD,CAAOC,KAAK,SAASL,KAAK,SAASO,GAAG,eAAtC,UACE,kDACA,kDACA,wDAGJ,sBAAKnB,UAAU,OAAf,UACE,cAAC,IAAD,CAAOA,UAAU,aAAagB,IAAI,gBAAlC,2BAGA,eAAC,IAAD,CAAOC,KAAK,SAASL,KAAK,SAASO,GAAG,gBAAtC,UACE,kDACA,kDACA,wDAGJ,sBAAKnB,UAAU,OAAf,UACE,cAAC,IAAD,CAAOA,UAAU,aAAagB,IAAI,kBAAlC,6BAGA,eAAC,IAAD,CAAOC,KAAK,SAASL,KAAK,SAASO,GAAG,kBAAkByE,UAAQ,EAAhE,UACE,kDACA,kDACA,wDAGJ,gCACE,cAAC,IAAD,CAAO5F,UAAU,aAAagB,IAAI,eAAlC,6BAGA,eAAC,IAAD,CAAOC,KAAK,SAASL,KAAK,SAASO,GAAG,eAAe0E,UAAQ,EAA7D,UACE,4CACA,+CACA,4CACA,8CACA,2D,OCVGC,UArBA,WACb,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAaC,gBAAgB,SAASC,iBAAiB,gBAAgBC,iBAAiB,WACxF,eAAC,KAAD,WACE,cAAC,IAAD,CAAK5F,GAAG,KAAR,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAKA,GAAG,KAAR,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAKD,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAKD,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC6F,EAAD,c,iCCjCV,yEAuFeC,IAtEK,SAAAzD,GAElB,IAAQqD,EAA8FrD,EAA9FqD,gBAAiBC,EAA6EtD,EAA7EsD,iBAAkBI,EAA2D1D,EAA3D0D,kBAAmBC,EAAwC3D,EAAxC2D,kBAAmBJ,EAAqBvD,EAArBuD,iBAEjF,OACE,sBAAKjG,UAAU,qBAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,SAAf,UACG+F,EAAkB,oBAAI/F,UAAU,wCAAd,SAAuD+F,IAAwB,GAClG,qBAAK/F,UAAU,6DAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBD,IAAI,KAApB,SACE,cAAC,IAAD,CAAMuG,GAAG,IAAT,oBAEF,cAAC,IAAD,CAAgBvG,IAAI,KAAKC,UAAU,eAAnC,SACGgG,IAEFI,EACC,cAAC,IAAD,CAAgBrG,IAAI,KAAKC,UAAU,eAAnC,SACGoG,IAGH,GAEDC,EACC,cAAC,IAAD,CAAgBtG,IAAI,KAAKC,UAAU,eAAnC,SACGqG,IAGH,GAEF,cAAC,IAAD,CAAgBtG,IAAI,KAAKwG,QAAM,EAA/B,SACGN,gBAOb,qBAAKjG,UAAU,qEAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAgBqB,MAAM,UAAUwB,KAAK,KAAK7C,UAAU,qCAApD,SACE,cAAC,IAAD,CAAM6C,KAAM,OAEd,eAAC,IAAD,CAAc9C,IAAI,KAAKyG,KAAG,EAA1B,UACE,eAAC,IAAD,CAAczG,IAAK0G,IAAMH,GAAG,aAA5B,UACE,cAAC,IAAD,CAAatG,UAAU,OAAO6C,KAAM,KACpC,sBAAM7C,UAAU,eAAhB,qBAEF,eAAC,IAAD,CAAcD,IAAK0G,IAAMH,GAAG,aAA5B,UACE,cAAC,IAAD,CAAetG,UAAU,OAAO6C,KAAM,KACtC,sBAAM7C,UAAU,eAAhB,qBAEF,eAAC,IAAD,CAAcD,IAAK0G,IAAMH,GAAG,cAA5B,UACE,cAAC,IAAD,CAAMtG,UAAU,OAAO6C,KAAM,KAC7B,sBAAM7C,UAAU,eAAhB,sBAEF,eAAC,IAAD,CAAcD,IAAK0G,IAAMH,GAAG,iBAA5B,UACE,cAAC,IAAD,CAAUtG,UAAU,OAAO6C,KAAM,KACjC,sBAAM7C,UAAU,eAAhB","file":"static/js/137.024514b5.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport Select from 'react-select'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Label } from 'reactstrap'\r\n\r\nconst colourOptions = [\r\n  { value: 'ocean', label: 'Ocean' },\r\n  { value: 'blue', label: 'Blue' },\r\n  { value: 'purple', label: 'Purple' },\r\n  { value: 'red', label: 'Red' },\r\n  { value: 'orange', label: 'Orange' }\r\n]\r\n\r\nconst SelectReact = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>React Select</CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        <p>\r\n          React Select is a flexible and beautiful Select Input control for ReactJS with multiselect, autocomplete,\r\n          async and creatable support. You can read it's documentation from{' '}\r\n          <a className='my-50' target='_blank' href='https://react-select.com/home' rel='noopener noreferrer'>\r\n            here\r\n          </a>\r\n          .\r\n        </p>\r\n        <Row>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label className='form-label'>Basic</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              defaultValue={colourOptions[0]}\r\n              options={colourOptions}\r\n              isClearable={false}\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label className='form-label'>Clearable</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              defaultValue={colourOptions[1]}\r\n              name='clear'\r\n              options={colourOptions}\r\n              isClearable\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label className='form-label'>Loading</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              defaultValue={colourOptions[2]}\r\n              name='loading'\r\n              options={colourOptions}\r\n              isLoading={true}\r\n              isClearable={false}\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label className='form-label'>Disabled</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              defaultValue={colourOptions[3]}\r\n              name='disabled'\r\n              options={colourOptions}\r\n              isDisabled={true}\r\n              isClearable={false}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default SelectReact\r\n","// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Input, Label } from 'reactstrap'\r\n\r\nconst SelectReactstrap = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Bootstrap Sizing</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='select-lg'>\r\n            Select Large\r\n          </Label>\r\n          <Input type='select' name='select' bsSize='lg' id='select-lg'>\r\n            <option>Pulp Fiction</option>\r\n            <option>Nightcrawler</option>\r\n            <option>Donnie Darko</option>\r\n          </Input>\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='select-default'>\r\n            Select Default\r\n          </Label>\r\n          <Input type='select' name='select' id='select-default'>\r\n            <option>Pulp Fiction</option>\r\n            <option>Nightcrawler</option>\r\n            <option>Donnie Darko</option>\r\n          </Input>\r\n        </div>\r\n        <div>\r\n          <Label className='form-label' for='select-sm'>\r\n            Select Small\r\n          </Label>\r\n          <Input type='select' name='select' bsSize='sm' id='select-sm'>\r\n            <option>Pulp Fiction</option>\r\n            <option>Nightcrawler</option>\r\n            <option>Donnie Darko</option>\r\n          </Input>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default SelectReactstrap\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Label } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport Select, { components } from 'react-select'\r\nimport makeAnimated from 'react-select/animated'\r\nimport CreatableSelect from 'react-select/creatable'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {\r\n  File,\r\n  Image,\r\n  Figma,\r\n  Globe,\r\n  Slack,\r\n  Chrome,\r\n  GitHub,\r\n  Gitlab,\r\n  Twitter,\r\n  Youtube,\r\n  Facebook,\r\n  Linkedin,\r\n  Dribbble,\r\n  FileText,\r\n  Instagram\r\n} from 'react-feather'\r\n\r\nconst colorOptions = [\r\n  { value: 'ocean', label: 'Ocean', color: '#00B8D9', isFixed: true },\r\n  { value: 'blue', label: 'Blue', color: '#0052CC', isFixed: true },\r\n  { value: 'purple', label: 'Purple', color: '#5243AA', isFixed: true },\r\n  { value: 'red', label: 'Red', color: '#FF5630', isFixed: false },\r\n  { value: 'orange', label: 'Orange', color: '#FF8B00', isFixed: false },\r\n  { value: 'yellow', label: 'Yellow', color: '#FFC400', isFixed: false }\r\n]\r\n\r\nconst iconOptions = [\r\n  {\r\n    label: 'Social Media',\r\n    options: [\r\n      {\r\n        value: 'facebook',\r\n        label: 'Facebook',\r\n        icon: Facebook\r\n      },\r\n      {\r\n        value: 'twitter',\r\n        label: 'Twitter',\r\n        icon: Twitter\r\n      },\r\n      {\r\n        value: 'linkedin',\r\n        label: 'Linkedin',\r\n        icon: Linkedin\r\n      },\r\n      {\r\n        value: 'github',\r\n        label: 'Github',\r\n        icon: GitHub\r\n      },\r\n      {\r\n        value: 'instagram',\r\n        label: 'Instagram',\r\n        icon: Instagram\r\n      },\r\n      {\r\n        value: 'dribbble',\r\n        label: 'Dribbble',\r\n        icon: Dribbble\r\n      },\r\n      {\r\n        value: 'gitlab',\r\n        label: 'Gitlab',\r\n        icon: Gitlab\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: 'File Types',\r\n    options: [\r\n      { value: 'pdf', label: 'PDF', icon: File },\r\n      { value: 'txt', label: 'txt', icon: FileText },\r\n      { value: 'image', label: 'Image', icon: Image }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Others',\r\n    options: [\r\n      { value: 'figma', label: 'Figma', icon: Figma },\r\n      { value: 'chrome', label: 'Chrome', icon: Chrome },\r\n      { value: 'safari', label: 'Safari', icon: Globe },\r\n      { value: 'slack', label: 'Slack', icon: Slack },\r\n      { value: 'youtube', label: 'Youtube', icon: Youtube }\r\n    ]\r\n  }\r\n]\r\n\r\nconst OptionComponent = ({ data, ...props }) => {\r\n  const Icon = data.icon\r\n\r\n  return (\r\n    <components.Option {...props}>\r\n      <Icon className='me-50' size={14} />\r\n      {data.label}\r\n    </components.Option>\r\n  )\r\n}\r\n\r\nconst groupedOptions = [\r\n  {\r\n    label: 'Ice Creams',\r\n    options: [\r\n      { value: 'vanilla', label: 'Vanilla' },\r\n      { value: 'Dark Chocolate', label: 'Dark Chocolate' },\r\n      { value: 'chocolate', label: 'Chocolate' },\r\n      { value: 'strawberry', label: 'Strawberry' },\r\n      { value: 'salted-caramel', label: 'Salted Caramel' }\r\n    ]\r\n  },\r\n  {\r\n    label: 'Snacks',\r\n    options: [\r\n      { value: 'Pizza', label: 'Pizza' },\r\n      { value: 'Burger', label: 'Burger' },\r\n      { value: 'Pasta', label: 'Pasta' },\r\n      { value: 'Pretzel', label: 'Pretzel' },\r\n      { value: 'Popcorn', label: 'Popcorn' }\r\n    ]\r\n  }\r\n]\r\n\r\nconst animatedComponents = makeAnimated()\r\n\r\nconst styles = {\r\n  multiValue: (base, state) => {\r\n    return state.data.isFixed ? { ...base, opacity: '0.5' } : base\r\n  },\r\n  multiValueLabel: (base, state) => {\r\n    return state.data.isFixed ? { ...base, color: '#626262', paddingRight: 6 } : base\r\n  },\r\n  multiValueRemove: (base, state) => {\r\n    return state.data.isFixed ? { ...base, display: 'none' } : base\r\n  }\r\n}\r\n\r\nconst orderOptions = values => {\r\n  if (values.length > 0) return values.filter(v => v.isFixed).concat(values.filter(v => !v.isFixed))\r\n}\r\n\r\nconst formatGroupLabel = data => (\r\n  <div className='d-flex justify-content-between align-center'>\r\n    <strong>\r\n      <span>{data.label}</span>\r\n    </strong>\r\n    <span>{data.options.length}</span>\r\n  </div>\r\n)\r\n\r\nconst SelectOptions = () => {\r\n  // ** State\r\n  const [fixedValue, setFixedValue] = useState(orderOptions([colorOptions[0], colorOptions[1], colorOptions[3]]))\r\n\r\n  const filterColors1 = inputValue => {\r\n    return colorOptions.filter(i => i.label.toLowerCase().includes(inputValue.toLowerCase()))\r\n  }\r\n\r\n  const loadOptions = (inputValue, callback) => {\r\n    setTimeout(() => {\r\n      callback(filterColors1(inputValue))\r\n    }, 2000)\r\n  }\r\n\r\n  const filterColors2 = inputValue => {\r\n    return colorOptions.filter(i => i.label.toLowerCase().includes(inputValue.toLowerCase()))\r\n  }\r\n\r\n  const fixedOnChange = (value, { action, removedValue }) => {\r\n    switch (action) {\r\n      case 'remove-value':\r\n      case 'pop-value':\r\n        if (removedValue.isFixed) {\r\n          return\r\n        }\r\n        break\r\n      case 'clear':\r\n        value = colorOptions.filter(v => v.isFixed)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    value = orderOptions(value)\r\n    setFixedValue(value)\r\n  }\r\n\r\n  const handleInputChange = newValue => {\r\n    const val = newValue.replace(/\\W/g, '')\r\n    return val\r\n  }\r\n\r\n  const promiseOptions = inputValue => {\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        resolve(filterColors2(inputValue))\r\n      }, 2000)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Options</CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        <Row>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label className='form-label'>Multi Select</Label>\r\n            <Select\r\n              isClearable={false}\r\n              theme={selectThemeColors}\r\n              defaultValue={[colorOptions[2], colorOptions[3]]}\r\n              isMulti\r\n              name='colors'\r\n              options={colorOptions}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label className='form-label'>Grouped Select</Label>\r\n            <Select\r\n              isClearable={false}\r\n              theme={selectThemeColors}\r\n              defaultValue={colorOptions[1]}\r\n              options={groupedOptions}\r\n              formatGroupLabel={formatGroupLabel}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label className='form-label'>Animated Select</Label>\r\n            <Select\r\n              isClearable={false}\r\n              theme={selectThemeColors}\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              defaultValue={[colorOptions[4], colorOptions[5]]}\r\n              isMulti\r\n              options={colorOptions}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label className='form-label'>Fixed Options Select</Label>\r\n            <Select\r\n              isClearable={false}\r\n              value={fixedValue}\r\n              styles={styles}\r\n              isMulti\r\n              onChange={fixedOnChange}\r\n              theme={selectThemeColors}\r\n              name='colors'\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              options={colorOptions}\r\n            />\r\n          </Col>\r\n          <Col md={6} xs={12} className='mb-1'>\r\n            <Label className='form-label'>Async Callback Select</Label>\r\n            <AsyncSelect\r\n              isClearable={false}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              name='callback-react-select'\r\n              loadOptions={loadOptions}\r\n              defaultOptions\r\n              onInputChange={handleInputChange}\r\n              theme={selectThemeColors}\r\n            />\r\n          </Col>\r\n          <Col md={6} xs={12} className='mb-1'>\r\n            <Label className='form-label'>Async Promises Select</Label>\r\n            <AsyncSelect\r\n              isClearable={false}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              loadOptions={promiseOptions}\r\n              cacheOptions\r\n              defaultOptions\r\n            />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label className='form-label'>Creatable Select</Label>\r\n            <CreatableSelect options={colorOptions} className='react-select' classNamePrefix='select' />\r\n          </Col>\r\n          <Col className='mb-1' md='6' sm='12'>\r\n            <Label className='form-label'>Icons</Label>\r\n            <Select\r\n              options={iconOptions}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              components={{\r\n                Option: OptionComponent\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default SelectOptions\r\n","// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Input, Label } from 'reactstrap'\r\n\r\nconst SelectReactstrap = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Reactstrap Select</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='select-basic'>\r\n            Basic Select\r\n          </Label>\r\n          <Input type='select' name='select' id='select-basic'>\r\n            <option>Pulp Fiction</option>\r\n            <option>Nightcrawler</option>\r\n            <option>Donnie Darko</option>\r\n          </Input>\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='select-custom'>\r\n            Custom Select\r\n          </Label>\r\n          <Input type='select' name='select' id='select-custom'>\r\n            <option>Pulp Fiction</option>\r\n            <option>Nightcrawler</option>\r\n            <option>Donnie Darko</option>\r\n          </Input>\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='select-disabled'>\r\n            Disabled Select\r\n          </Label>\r\n          <Input type='select' name='select' id='select-disabled' disabled>\r\n            <option>Pulp Fiction</option>\r\n            <option>Nightcrawler</option>\r\n            <option>Donnie Darko</option>\r\n          </Input>\r\n        </div>\r\n        <div>\r\n          <Label className='form-label' for='select-multi'>\r\n            Multiple Select\r\n          </Label>\r\n          <Input type='select' name='select' id='select-multi' multiple>\r\n            <option>Square</option>\r\n            <option>Rectangle</option>\r\n            <option>Circle</option>\r\n            <option>Triangle</option>\r\n            <option>Pentagon</option>\r\n          </Input>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default SelectReactstrap\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport ReactSelect from './SelectReact'\r\nimport SelectSizing from './SelectSizing'\r\nimport Selectoptions from './SelectOptions'\r\nimport SelectReactstrap from './SelectReactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst Select = () => {\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Select' breadCrumbParent='Form Elements' breadCrumbActive='Select' />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <ReactSelect />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Selectoptions />\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <SelectReactstrap />\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <SelectSizing />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Select\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}