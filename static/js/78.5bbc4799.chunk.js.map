{"version":3,"sources":["views/apps/ecommerce/wishlist/index.js","@core/components/breadcrumbs/index.js"],"names":["Wishlist","dispatch","useDispatch","store","useSelector","state","ecommerce","useEffect","getWishlistItems","breadCrumbTitle","breadCrumbParent","breadCrumbActive","wishlist","length","className","map","item","CartBtnTag","isInCart","Link","to","slug","src","image","alt","name","Array","fill","listItem","index","classnames","rating","price","description","color","onClick","deleteWishlistItem","id","size","tag","addToCart","getCartItems","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","active","end"],"mappings":"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","file":"static/js/78.5bbc4799.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Custom Components\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Star, X, ShoppingCart, Info } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardText, Button, Alert } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getWishlistItems, deleteWishlistItem, addToCart, getCartItems } from '../store'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/app-ecommerce.scss'\r\n\r\nconst Wishlist = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.ecommerce)\r\n\r\n  //** ComponentDidMount : get wishlist items\r\n  useEffect(() => {\r\n    dispatch(getWishlistItems())\r\n  }, [])\r\n\r\n  // ** Handle Move/Add to cart\r\n  const handleCartBtn = (id, val) => {\r\n    if (val === false) {\r\n      dispatch(addToCart(id))\r\n    }\r\n    dispatch(getWishlistItems())\r\n    dispatch(getCartItems())\r\n  }\r\n\r\n  // ** Renders wishlist products\r\n  const renderWishlist = () => {\r\n    return store.wishlist.map(item => {\r\n      const CartBtnTag = item.isInCart ? Link : 'button'\r\n      return (\r\n        <Card className='ecommerce-card' key={item.name}>\r\n          <div className='item-img text-center mx-auto'>\r\n            <Link to={`/apps/ecommerce/product-detail/${item.slug}`}>\r\n              <img className='img-fluid' src={item.image} alt={item.name} />\r\n            </Link>\r\n          </div>\r\n          <CardBody>\r\n            <div className='item-wrapper'>\r\n              <div className='item-rating'>\r\n                <ul className='unstyled-list list-inline'>\r\n                  {new Array(5).fill().map((listItem, index) => {\r\n                    return (\r\n                      <li key={index} className='ratings-list-item me-25'>\r\n                        <Star\r\n                          className={classnames({\r\n                            'filled-star': index + 1 <= item.rating,\r\n                            'unfilled-star': index + 1 > item.rating\r\n                          })}\r\n                        />\r\n                      </li>\r\n                    )\r\n                  })}\r\n                </ul>\r\n              </div>\r\n              <div className='item-cost'>\r\n                <h6 className='item-price'>$ {item.price}</h6>\r\n              </div>\r\n            </div>\r\n            <div className='item-name'>\r\n              <Link to={`/apps/ecommerce/product-detail/${item.slug}`}>{item.name}</Link>\r\n            </div>\r\n            <CardText className='item-description'>{item.description}</CardText>\r\n          </CardBody>\r\n          <div className='item-options text-center'>\r\n            <Button\r\n              className='btn-wishlist remove-wishlist'\r\n              color='light'\r\n              onClick={() => {\r\n                dispatch(deleteWishlistItem(item.id))\r\n              }}\r\n            >\r\n              <X className='me-25' size={14} />\r\n              <span>Remove</span>\r\n            </Button>\r\n            <Button\r\n              color='primary'\r\n              tag={CartBtnTag}\r\n              className='btn-cart move-cart'\r\n              onClick={() => handleCartBtn(item.id, item.isInCart)}\r\n              /*eslint-disable */\r\n              {...(item.isInCart\r\n                ? {\r\n                    to: '/apps/ecommerce/checkout'\r\n                  }\r\n                : {})}\r\n              /*eslint-enable */\r\n            >\r\n              <ShoppingCart className='me-50' size={14} />\r\n              <span>{item.isInCart ? 'View In Cart' : 'Add To Cart'}</span>\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs breadCrumbTitle='Wishlist' breadCrumbParent='eCommerce' breadCrumbActive='Wishlist' />\r\n      {store.wishlist.length ? (\r\n        <section className='grid-view wishlist-items'>{renderWishlist()}</section>\r\n      ) : (\r\n        <Alert color='info'>\r\n          <div className='alert-body'>\r\n            <Info size={14} />\r\n            <span className='align-middle ms-50'>Your Wishlist is empty</span>\r\n          </div>\r\n        </Alert>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Wishlist\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}